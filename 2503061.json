[
  {
    "bookSourceComment": "基于 PyFQWeb 项目开发的 Legado 兼容书源\nQ群 704931168",
    "bookSourceGroup": "❤️番茄,❤️常用",
    "bookSourceName": "🍅 番茄小说[纯享阅读]",
    "bookSourceType": 0,
    "bookSourceUrl": "https://ikun.laoguantx.top:45554#b",
    "bookUrlPattern": "https?://.*(fqnovel|snssdk|fanqienovel|changdunovel)\\.com/.*[0-9]{19}.*",
    "customOrder": -98722,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js: \n个人中心 = 1\n\njs = (cid, genre, gender) => `@js:\nsource.bookSourceUrl.split(\"#\")[0] + \"/reading/bookapi/new_category/landing/v/?\" + [\n    \"category_id=${cid}\",\n    \"limit=20\",\n    \"offset=\" + (page - 1),\n    \"gender=${gender}\",\n    \"genre=${genre}\"\n  ].join(\"&\")`\n  \nreadHistory = (path) => `@js:\nlet ck = \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : source.getLoginInfoMap()['手动登录Token'])\n\"/multi-detail?book_id=\" + getBookId(java.ajax('https://reading.snssdk.com/reading/bookapi/read_history/list/v/?aid=1967,{\"headers\":{\"Cookie\":\"' + ck + '\"}}'), page-1)`\n\nobj = (title, url, type, type1) => ({\n  title: title,\n  url: url,\n  style: {\n    layout_flexGrow: 1,\n    layout_flexBasisPercent: type\n  }\n})\n\narr = []\njava.longToast(\"请稍等，发现列表正在热更新！\")\nindex=[0, 1, 2]\nfor (let i of index) {\n  // java.toast(i)\n  let type = i\n  $ = JSON.parse(java.ajax(java.log(source.bookSourceUrl.split(\"#\")[0] + \"/reading/bookapi/new_category/front/v/?\" + [\n      \"update_version_code=58932\",\n      \"distinct_style=1\",\n      \"new_category_tab=\" + i\n    ].join(\"&\")\n  ))).data.category_tab_data\n  cate = []\n  cate.push(obj(\n    \"====== \" + $.tab_name + \" ======\", \"\", 1\n  ))\n  $.cell_data.forEach((c) => {\n    gender_1 = (type == 0 || type == 1) ? type : 1;\n    genre_1 = type == 3 ? 1 : type == 5 ? 110 : type == 6 ? 130 : 0;\n    cate.push(obj(\n      c.cell_name,\n      js(c.atom_data[0].category_data.category_id, genre_1, gender_1),\n      1\n    ))\n    for (j = 2; j < 5; j++) {\n      c.atom_data.slice(1).forEach((a) => {\n        d = a.category_data\n        if (d.name.length == j) {\n          cate.push(obj(d.name, js(d.category_id, genre_1, gender_1), -1))\n        }\n      })\n    }\n  })\n  arr = cate.concat(arr)\n}\n\nlet book_shelf_url = 'https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=57700&update_version_code=57700'\nlet book_shelf_info = JSON.parse(java.ajax(book_shelf_url + ', ' + JSON.stringify({\n  headers: {\n    'Cookie': \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() ? source.getLoginInfoMap() : {})['手动登录Token']),\n  }\n})))\n\njava.log(JSON.stringify(book_shelf_info))\n\nlet username\nif (book_shelf_info.code != 0) {\n  个人中心 = 0\n} else {\n  let uinfo = java.ajax(\"https://fanqienovel.com/api/user/info/v2,\" + JSON.stringify({ headers: { Cookie: \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() ? source.getLoginInfoMap() : {})['手动登录Token']) }}))\n  uinfo = JSON.parse(uinfo)\n  username = uinfo.data.name\n}\n\nlet gro = []\npush = (title, url, type) => gro.push({\n  title: title,\n  url: url,\n  style: {\n    layout_flexGrow: 1,\n    layout_flexBasisPercent: type\n  }\n});\n\nlet sArr = []\n\nif (个人中心) {\n  let groups_bookids = {\n    \"未分组\": []\n  }\n  book_shelf_info.data.book_shelf_info.forEach(i => {\n    if (!groups_bookids[i.group_name ? i.group_name : \"未分组\"]) groups_bookids[i.group_name] = []\n    groups_bookids[i.group_name ? i.group_name : \"未分组\"].push(i.book_id)\n  })\n\n  Object.keys(groups_bookids).forEach(k => {\n    var multi_detail_post_body = {\n      data: {\n        book_shelf_info: []\n      }\n    }\n    groups_bookids[k].forEach(i => multi_detail_post_body.data.book_shelf_info.push({ book_id: String(i), item_id: '0' }))\n    // var multi_detail_group_url = `https://fanqienovel.com/api/bookshelf/multidetail,${JSON.stringify(multi_detail_post_body)}`\n    // var book_ids = getBookId(JSON.stringify(multi_detail_post_body)).join(\",\")\n    push(k, \"https://fanqienovel.com/fqbookshelf/groupName/\" + k, 0.4)\n  })\n  if (Object.keys(groups_bookids).length % 2 != 0) push(\"占位\", \"\", 0.4)\n  // java.log(JSON.stringify(gro, null, 2))\n  sArr.push(obj(username + '的个人中心', '', 1))\n  // sArr.push(obj('首页推荐', \"https://fanqienovel.com/tab/0\", 0.4))\n  // sArr.push(obj('猜你喜欢', \"https://fanqienovel.com/tab/1\", 0.4))\n  // sArr.push(obj('猜你喜欢', \"https://fanqienovel.com/tab/1\", 0.4))\n  sArr.push(obj(\"我的书架\", \"https://fanqienovel.com/fqbookshelf\", 1))\n  \n  sArr = sArr.concat(gro)\n  // java.toast(JSON.stringify(sArr)) \n  sArr.push(obj(\"阅读历史\", readHistory(), 1))\n}\n\narr = sArr.concat(arr)\nJSON.stringify(arr)\n",
    "jsLib": "let replaceCover = (u) => {\n    if (u.startsWith(\"https://\")) u = u.substring(8)\n    else u = u.substring(7)\n    let uArr = u.split(\"/\")\n    uArr[0] = \"https://p6-novel.byteimg.com/origin\"\n    let uArr2 = []\n    uArr.forEach((x) => {\n        if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n        else uArr2.push(x.split(\"~\")[0])\n    })\n    u = uArr2.join(\"/\")\n    return u\n}\n\nfunction splitArray(input, size) {\n  const output = []\n  for (let i = 0; i < input.length; i += size) {\n    output.push(input.slice(i, i + size))\n  }\n  return output\n}\n\nfunction getBookId(url, page) {\n\tconst {java} = this\n\t$ = JSON.parse(url).data\n\tif ($.book_shelf_info != 0 && $.book_shelf_info != undefined) {\n\t\tarr = $.book_shelf_info.map($ => $.book_id)\n\t} else if (list = $.data_list != 0 && $.data_list != undefined)  {\n\t\tarr = $.data_list.map($ => $.book_id_str)\n\t} else {\n\t\tjava.toast(\"获取 book_id 失败，你可能需要登录！\")\n\t}\n\treturn arr.slice(page*100, (page+1)*100)\n}\n",
    "lastUpdateTime": 1739691946952,
    "loginUi": "[\n{\n  name: \"手动登录Token\",\n  type: \"password\",\n  action: \"\"\n},\n{\n\tname: \"　　[查看教程]　　\",\n\ttype: \"button\",\n\taction: \"tutorial()\"\n},\n{\n\tname: \"　  [查看Token] 　 \",\n\ttype: \"button\",\n\taction: \"logToken()\"\n},\n{\n\tname: \"　　[账号登录]　　\",\n\ttype: \"button\",\n\taction: \"l2(true)\"\n},\n{\n\tname: \"　　[退出登录]　　\",\n\ttype: \"button\",\n\taction: \"logout()\"\n},\n{\n\tname: \"祝你天天开心哇 书源 by 梓澄qwq(also Naiy)\",\n\ttype: \"button\",\n\taction: \"t()\"\n}\n]\n",
    "loginUrl": "// 登录及登录检查\nfunction login_(openBrowser, checkMode) {\n    // java.removeCookie(\"snssdk.com\")\n    var cookie_ = String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() ? source.getLoginInfoMap() : {})['手动登录Token']\n    // java.toast(cookie_)\n    if (cookie_ && cookie_ != \"\" && !checkMode) {\n        if (!source.variableComment) {\n            java.toast(\"请不要重复登录，请先退出登录！\")\n        } else {\n            java.toast(\"您为填写token登录，请手动移除token后再次登录\")\n        }\n        return false\n    }\n    if (openBrowser) {\n        try {\n            java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n        } catch (e) {\n            java.toast(e)\n        }\n    }\n    // java.log(\"snssdk cookie: \" + java.getCookie(\"snssdk.com\") + \"will be reomved\")\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    // java.log(cookie)\n    var cookie_ = \"sessionid=\" + String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap())['手动登录Token']\n    let user\n    try {\n      user = JSON.parse(java.ajax(\"https://fanqienovel.com/api/user/info/v2,\" + JSON.stringify({\n        method: \"GET\",\n        headers: {\n          \"Cookie\": cookie_\n        }\n      }))).data.name\n     } catch (e) {java.log(e)}\n    if (!cookie_ || cookie_ == \"sessionid=\" || !user) {\n        java.toast(\"未获取到登录凭据，登录失败\")\n        return false\n    }\n    java.toast(\"欢迎 \" + user + \"\\n登录成功！\")\n    return true\n}\n\nfunction login() // 一定程度上加上这个函数能够支持更多的版本\n{}\n\nfunction l2(a, b) {\n  try {\n    login_(a, b)\n  } catch (e) {\n    java.log(e+\"\\n\"+e.stack)\n  }\n}\n\n// 取消登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    if (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() ? source.getLoginInfoMap() : {})['手动登录Token']) java.toast(\"请手动移除填写的Token\")\n    else java.toast(\"退出登录成功\");\n}\n\nfunction logToken() {\n  java.log(\n    String(\n      cookie.getKey(\n        \"fanqienovel.com\",\n        \"sessionid\"\n      )\n    ) ? String(\n     cookie.getKey(\n        \"fanqienovel.com\", \n        \"sessionid\"\n      )\n    ) : (\n     source.getLoginInfoMap()\n      ? source.getLoginInfoMap()\n      : {}\n    )['手动登录Token']\n  )\n  java.toast(\"登录Token已打印到日志，请妥善保管\")\n}\n\nfunction tutorial() {\n  java.longToast(\"\\n手动登录token功能用于部分用户的跨端登录，不知道是什么的留空就行\\n普通用户请使用下方的\\\"账号登录\\\"按钮登录自己的账号\")\n}\n\nfunction t() {\n  let gc = [\"(*^ω^*)\", \"(=^▽^=)\", \"(。’▽’。)♡\", \"٩(๑´0`๑)۶\", \"喵\", \"你好？\", \"逢考必过！\", \"早ﾉ☀\"]\n  rnd = Math.floor(Math.random() * 100)\n  if (typeof gc[rnd] != \"undefined\") {\n    java.toast(gc[rnd])\n  } else {\n    let res = JSON.parse(\n      java.ajax(\"https://v1.hitokoto.cn\")\n    )\n    java.toast(res.hitokoto)\n  }\n}",
    "respondTime": 1687,
    "ruleBookInfo": {
      "author": "author",
      "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))",
      "init": "$.data",
      "intro": "&nbsp;&nbsp;\n📕 源名：{{$.original_book_name}}\n📖 别名：{{$.book_flight_alias_name}}\n✏️ 开坑：{{$.create_time##T|\\+.*## }}\n🏷️ 标签：{{$.tags}}\n👤 主角：{{$.roles##\\[|\\\"|\\]}}\n👁️ 在线：{{$.read_count}}人在读{{\"\\n\"+\"​\"}}\n📜 简介：{{$.abstract}}{{\"\\n\"+\"​\"}}\n📍 {{$.copyright_info##，.*##。}}\n@js:result.replace(/.+：(人在读)?\\n/g,\"\")",
      "kind": "男生{{$.gender}}女生\n{{$.category}}\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{java.timeFormatUTC(java.getString(\"last_chapter_update_time\")*1000,'yyyy-MM-dd',8)}}\n##连载0|1完结|男生0|1女生\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "lastChapter": "{{$.last_chapter_title}} • {{java.timeFormat(java.getString(\"last_chapter_update_time\")*1000)}}",
      "name": "book_name",
      "tocUrl": "{{source.bookSourceUrl.split(\"#\")[0]}}/catalog?book_id={{$.book_id}}",
      "wordCount": "word_number"
    },
    "ruleContent": {
      "content": "<js>\nlet res = JSON.parse(result).data.content\nfunction getComic(result) {\n  let mat = result.match(/<article>([\\s\\S]*?)<\\/article>/);\n  try {\n    let cnt = JSON.parse(\n      mat\n        ? mat[1].replace(/\\&/g, '\"').replace(/\\;/g, \"\").replace(/\\#34/g, \"\")\n        : result\n    );\n    return (mat ? cnt.skeleton.data : cnt.picInfos)\n      .map((i) => {\n        let path = mat\n          ? cnt.materials[i.element_name].data.web_uri\n          : \"novel-pic/\" + i.md5;\n        return `<img src=\"https://p3-novel.byteimg.com/origin/${path}\">`;\n      })\n      .join(\"<br>\");\n  } catch (e) { // not comic content\n    mat = result.match(/<body>([\\s\\S]*?)<\\/body>/)\n    // java.log(result)\n    return (mat ? mat[1] : result).toString().replace(/\\<\\!DOCTYPE html.*/g, \"\").replace(/\\<tt_keyword_ad.*\\<\\/tt_keyword_ad\\>/, \"\").replace(/\\<a epub.*\\>\\<\\/a\\>/g, \"\")\n  }\n}\nresult = getComic(String(res));\nresult.replace(/\\{\\!\\-\\- PGC_VOICE\\:.*\\-\\-\\}/g, \"\")\n</js>"
    },
    "ruleExplore": {
      "author": "$.author",
      "bookList": "<js>\nfunction getBookIdFull(url) {\n\tconst {java} = this\n\t$ = JSON.parse(url).data\n\tif ($.book_shelf_info != 0 && $.book_shelf_info != undefined) {\n\t\tarr = $.book_shelf_info.map($ => $.book_id)\n\t} else if (list = $.data_list != 0 && $.data_list != undefined)  {\n\t\tarr = $.data_list.map($ => $.book_id_str)\n\t} else {\n\t\tjava.toast(\"获取 book_id 失败，你可能需要登录！\")\n\t}\n\treturn arr\n}\nlet ck = \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() ? source.getLoginInfoMap() : {})['手动登录Token'])\n\ngetShelf = () => {\nlet book_shelf_url = 'https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=57700&update_version_code=57700'\nlet book_shelf_info = java.ajax(book_shelf_url + ', ' + JSON.stringify({\n  headers: {\n    'Cookie': ck\n  }\n}))\n\nbid = getBookIdFull(book_shelf_info)\nlet id_list = splitArray(bid, 100)\nlet urls = []\nid_list.forEach(i => {\n    urls.push(source.bookSourceUrl.split(\"#\")[0] + \"/multi-detail?book_id=\" + i.join(\",\"))\n})\n\nres = java.ajaxAll(urls)\n\nlet resp = {book_info: []}\nres.forEach(r => {\n  resp.book_info = resp.book_info.concat(JSON.parse(r.body()).data)\n})\n\nreturn resp\n}\n\nfunction getByGroupName(name) {\n  let book_shelf_url = 'https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=57700&update_version_code=57700'\n\n  let book_shelf_info = JSON.parse(java.ajax(book_shelf_url + ', ' + JSON.stringify({\n    headers: {\n      'Cookie': ck,\n    }\n  })))\n  let group_bookids = {\n    \"未分组\": []\n  }\n  // java.log(\n  book_shelf_info.data.book_shelf_info.forEach(i => {\n    if (!group_bookids[i.group_name ? i.group_name : \"未分组\"]) group_bookids[i.group_name] = []\n    group_bookids[i.group_name ? i.group_name : \"未分组\"].push(i.book_id)\n  })\n  // java.log(JSON.stringify(group_bookids[\"未分组\"]))\n  // java.log(decodeURIComponent(name))\n  if (!group_bookids[decodeURIComponent(name)]) return {data: []}\n  //java.log(\"awa\")\n  let book_ids = splitArray(group_bookids[decodeURIComponent(name)], 100)\n  let urls = []\n\n  book_ids.forEach(i => {\n    urls.push(source.bookSourceUrl.split(\"#\")[0] + \"/multi-detail?book_id=\" + i.join(\",\"))\n  })\n  \n  res = java.ajaxAll(urls)\n\n  let resp = {book_info: []}\n  res.forEach(r => {\n    resp.book_info = resp.book_info.concat(JSON.parse(r.body()).data)\n  })\n\n  return resp\n}\n\nfunction getByTabIndex(index) {\n  let url = _mlsec.requestHeader(\n\t  \"bookmall/tab\",\n    \"version_name=5.8.9.32\",\n\t  null,\n\t  ck\n  )\n  let all = JSON.parse(java.ajax(url))\n  let tab = all.data.tab_item[0].cell_data[index].cell_data\n  if (!tab) tab = []\n  let bookList = []\n  for (let i of tab) {\n    bookList = bookList.concat(i.book_data)\n    // java.log(JSON.stringify(i.book_data))\n  }\n  return { book_info: bookList }\n}\n\nif (baseUrl.endsWith(\"bookshelf\")) result = getShelf(\"bookshelf/info\")\nelse {\n  let w = baseUrl.split(\"/\")\n  if (baseUrl.includes(\"groupName\")) {\n    result = getByGroupName(w[w.length - 1])\n  } else if (baseUrl.includes(\"tab\")) {\n    result = getByTabIndex(parseInt(w[w.length - 1]))\n  } else result = JSON.parse(result)\n}\nJSON.stringify({data: result.book_info || result.data.book_info || result.detail_list || result.data})\n</js>\n$.data[*]",
      "bookUrl": "{{source.bookSourceUrl.split(\"#\")[0]}}/detail?book_id={{$.book_id}}",
      "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))",
      "intro": "$.abstract##\\n",
      "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "lastChapter": "",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "<js>\nlet res = JSON.parse(result)\nlet books\n\nif (res.search_tabs) {\n  res.search_tabs.forEach((i) => {\n    if (i.tab_type == 3) books = i.data\n  })\n} else books = res.data\n\nlet results = []\n\nbooks.forEach(w => {\n  results.push(w.book_data[0])\n})\n\nJSON.stringify(results)\n</js>$[*]",
      "bookUrl": "{{source.bookSourceUrl.split(\"#\")[0]}}/detail?book_id={{$.book_id}}",
      "checkKeyWord": "转生三无猫娘，成神的我只想摸鱼",
      "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))",
      "intro": "abstract##\\n",
      "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "data.item_data_list[*]",
      "chapterName": "title",
      "chapterUrl": "{{source.bookSourceUrl.split(\"#\")[0]}}/content2?item_id={{$.item_id}}",
      "isPay": "",
      "isVip": "",
      "updateTime": "{{$.volume_name}} | {{$.chapter_word_number}}字 | {{java.timeFormatUTC(java.getString(\"first_pass_time\") * 1000, 'yyyy-MM-dd HH:mm:ss', 12)}}##第一卷：默认\n@js:\nif (result.startsWith(\" |\")) result = result.slice(2)\nif (result.startsWith(\"| \")) result = result.slice(2)\nresult"
    },
    "searchUrl": "/search?query={{key}}&offset={{ ( page - 1 ) * 10 }}",
    "weight": 0
  },
  {
    "bookSourceComment": "20241104新增指定来源搜索\n20241124新增详情页音色提示\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能\n20250104新增服务器\n20250105登录新增手动填写服务器、音色",
    "bookSourceGroup": "❤️番茄",
    "bookSourceName": "🍅聚合书源有你喜欢的",
    "bookSourceType": 0,
    "bookSourceUrl": "http://110.40.38.4:5008\nhttps://api.langge.tk\nhttps://api.doubi.tk\nhttp://api.dahuilang.cf\n提示：点击登录切换服务器按钮可进行切换(当前书源为融合版)",
    "bookUrlPattern": "",
    "customOrder": -7,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"大灰狼阅读记录\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&key=\" + key,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }\n];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"search\": \"-1\",\n            \"tone_id\": \"-1\",\n            \"server\": \"http://110.40.38.4:5008\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n",
    "lastUpdateTime": 1741071283525,
    "loginUi": "\n[ {\n        \"name\":  \"☕请杯咖啡，解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },    {\n        \"name\":  \"更新书源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },\n\n    {\n        \"name\":  \"♥♥♥♥♥♥ 填写密钥 ♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },    {\n        \"name\":  \"服务器地址(可不填)\",\n        \"type\": \"text\"\n        },{\n        \"name\":  \"番茄登录\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },\n\n    {\n        \"name\":  \"退出登录\",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前模式\",\n        \"type\": \"button\",\n        \"action\": \"get_search()\"\n      },\n      {\n        \"name\":  \"当前音色\",\n        \"type\": \"button\",\n        \"action\": \"get_tone_id(tone_id)\"\n      },   {\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },\n      {\n        \"name\": \"🔎搜小说\",\n        \"type\": \"button\",\n        \"action\": \"set_search('-1','小说搜索')\"\n      },\n      {\n        \"name\": \"🔎搜音频\",\n        \"type\": \"button\",\n        \"action\": \"set_search('0','音频搜索')\"\n      },{\n        \"name\": \"🔎搜漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_search('-2','漫画搜索')\"\n      },\n      {\n        \"name\": \"阅读模式\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('-1','纯净阅读')\"\n      },\n    {\n        \"name\": \"多人发音\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('51','多人发音')\"\n      },\n      {\n        \"name\": \"甜美少女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('1','甜美少女')\"\n      },\n      {\n        \"name\": \"清亮青叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('2','清亮青叔')\"\n      },\n      {\n        \"name\": \"开朗青年\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('5','开朗青年')\"\n      },\n      {\n        \"name\": \"温柔淑女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('6','温柔淑女')\"\n      },\n      {\n        \"name\": \"成熟大叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('4','成熟大叔')\"\n      },\n      {\n        \"name\": \"大叔升级\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('74','大叔升级')\"\n      },\n      {\n        \"name\": \"优雅御姐\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('30','优雅御姐')\"\n      },\n      {\n        \"name\": \"其他音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      }\n    ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        }\n    } catch (error) {\n    }\n    ;\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        }} catch (error) {\n    }\n    ;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n\n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return '';\n}\n\n// 填写密钥\nfunction loginqt() {\n    let key = gets_key()\n    if (key && key != \"\") {\n        java.toast(\"您已填写秘钥:\" + key);\n        return false\n    }\n    java.startBrowserAwait(getArgument('server') + '/check_key', '登录晴天小说书源');\n    key = gets_key()\n    if (key) {\n        java.longToast('登录成功，秘钥：' + key);\n        return true\n    } else {\n        java.toast('登录失败！！！！！');\n        return false\n    }\n}\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    //cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    return getArguments(open_argument, key);\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() {\n    java.startBrowserAwait(getArgument('server') + '/', \"接口文档\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//获取搜索\nfunction get_search() {\n    var search = getArgument('search');\n    var datadist = {\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"0\": \"音频模式\",\n    };\n    var tishi = '\\n\\n当前搜索模式：' + datadist[search]\n    java.toast(tishi);\n    return search\n}\n\n//设置搜索\nfunction set_search(mode, name) {\n    setArgument('search', mode);\n    setArgument('tone_id', mode);\n    java.toast('\\n\\n已切换至' + name);\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    ;\n    if (!zdyserver) {\n        const servers = String(source.bookSourceUrl).split('\\n').map(s => s.trim()).filter(s => s && !s.includes('提示'));\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\nfunction zr() {\n    let toast = '\\n\\n真人语音无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n    java.toast(toast);\n}\n\nfunction mh() {\n    let toast = '\\n\\n漫画无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n    java.toast(toast);\n}",
    "respondTime": 12273,
    "ruleBookInfo": {
      "author": "author",
      "coverUrl": "thumb_url",
      "init": "",
      "intro": "$..book_id\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"默认发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\",\n  '999':'喜马拉雅听书'\n};\n\nlet ms;\nms = datadist[tone_id];\nif (!ms) {\n\t\tms = tone_id\n\t\t}\n\nvar tishi = '\\n\\n当前模式：'+ ms +'\\n\\n如切换,请切换请下拉刷新详情页\\n由于缓存原因，已听的需要切换到下一章再切回来\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${base_url}/tts_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\n\nif (!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n\n</js>",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "lastChapter": "last_chapter_title",
      "name": "book_name",
      "tocUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\njava.put(\"id\", book_id);\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "wordCount": "word_number"
    },
    "ruleContent": {
      "content": "content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.data.data",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url,media] = result.split(\"|==|\");\n\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/multi_detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "$..book_data[*]",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n<js>\nlet [book_id, raw_book_name, raw_author, raw_thumb_url,media] = result.split(\"|==|\");\n\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/multi_detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "checkKeyWord": "炙热沦陷",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\n\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn '无'\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\nlet media = result.split(\"-\")[0];\nlet bookid = result.split(\"-\")[1].split(\"_\")[0];\nlet lasts = lastChapterTitle(media,bookid);\n\n`${media}: ${lasts}`\n</js>",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "data.chapterListWithVolume[*].*\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nlet genreValue = JSON.parse(java.ajax(book.bookUrl)).genre;\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"真人发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\"\n};\nvar ms = String(tone_id)\nif (genreValue === '0' && ms === '-1') {\n\tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n} else if (genreValue === '1') {\n\t  if (device === 'android') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n}else if (genreValue === '4') {\n\t   var ms = '0';\n\t   if (device === 'android') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n} else if (genreValue === '9999'){\n   \tvar ms = '-1';\n   \tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n\t }else if (genreValue!='0' && genreValue!='1' && genreValue!='4' && ms === '-1'){\n   \tvar ms = '-1';\n   \tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n\t } else {\n\t \tif (device === 'android') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n\t \t};\nresult",
      "chapterName": "title",
      "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\n\n\n// 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\n\nlet catalogue_url = `${base_url}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=${tone_id}&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url",
      "updateTime": "firstPassTime"
    },
    "searchUrl": "{{key}}\n@js:\nlet search_title = result;\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\n\nlet open_argument = source.getVariable();\n\t   \t\t\t   \t\n\t   \t\t\t   \t\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet media;\nif (ms == '0') {\n    media = `${base_url}/searchAudio?title=`+search_title+'&media=喜马拉雅,番茄';\n} else if (ms == '-2') {\n    media = `${base_url}/searchCaricature?title=`+search_title+'&media=番茄';\n} else {\n     media = `${base_url}/searchNovel?title=`+search_title\n}\nkey = '&key=' + key;\n//java.toast(media + key);\nmedia + key",
    "variableComment": "",
    "weight": 63
  },
  {
    "bookSourceComment": "支持番茄小说，QQ免费小说，熊猫小说，得间小说，七猫小说，起点69小说\n更新说明：\n登录页新增手动切换书籍来源选项按钮\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能",
    "bookSourceGroup": "❤️番茄,❤️常用",
    "bookSourceName": "晴天小说<晴天>",
    "bookSourceType": 0,
    "bookSourceUrl": "http://novel.cloudepays.cn\nhttp://api618.qingtian618.site\nhttps://api.gyks.cf",
    "bookUrlPattern": "",
    "customOrder": -6,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet keys = getArguments(open_argument,'key');\nif (!keys) {\n\tkeys = gets_key();\n\t}\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"晴天阅读记录\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&key=\" + keys,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }\n];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"media\": \"全部\",\n            \"server\": \"http://api.cloudepays.cn\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n",
    "lastUpdateTime": 1736397551543,
    "loginUi": "[\n      {\n        \"name\":  \"  请杯咖啡，破解限制  \",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"设备管理\",\n        \"type\": \"button\",\n        \"action\": \"clear()\"\n      },{\n        \"name\":  \"更新源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"♥♥♥♥♥♥填写密钥♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"番茄登录(同步书架)\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \" 退出番茄登录 \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\":  \"当前来源\",\n        \"type\": \"button\",\n        \"action\": \"getmedia()\"\n      },{\n        \"name\":  \"搜索全部\",\n        \"type\": \"button\",\n        \"action\": \"set('搜索全部')\"\n      },{\n        \"name\":  \"搜索番茄\",\n        \"type\": \"button\",\n        \"action\": \"set('番茄')\"\n      },{\n        \"name\":  \"搜索七猫\",\n        \"type\": \"button\",\n        \"action\": \"set('七猫')\"\n      },{\n        \"name\":  \"搜索起点\",\n        \"type\": \"button\",\n        \"action\": \"set('起点')\"\n      },{\n        \"name\":  \"搜索得间\",\n        \"type\": \"button\",\n        \"action\": \"set('得间')\"\n      },{\n        \"name\":  \"搜索QQ\",\n        \"type\": \"button\",\n        \"action\": \"set('QQ')\"\n      },{\n        \"name\":  \"搜索熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set('熊猫')\"\n      },{\n        \"name\":  \"搜索轻小说\",\n        \"type\": \"button\",\n        \"action\": \"set('哔哩')\"\n      }    ]",
    "loginUrl": "function login(){}\nlet server = getArgument('server');\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return ''; \n}\n\n// 填写密钥\nfunction loginqt(){\n    let key = gets_key()\n    if (key && key != \"\") {\n            java.toast(\"您已填写秘钥:\"+key);\n            return false\n        }\n    java.startBrowserAwait(getArgument('server')+'/check_key','登录晴天小说书源');\n    key = gets_key()\n    if (key){\n        java.longToast('登录成功，秘钥：'+key);\n        return true\n        } else {\n            java.toast('登录失败！！！！！');\n            return false\n            }\n}\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n //cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\t\t\nfunction api() { \tjava.startBrowserAwait(getArgument('server')+'/','首页');\n    }\nfunction hqmy() { \tjava.startBrowserAwait(getArgument('server')+'/key','密钥');\n    }\nfunction vip() { \tjava.startBrowserAwait(getArgument('server')+'/coffee',\"喝咖啡\");\n    }\nfunction clear() { \tjava.startBrowserAwait(getArgument('server')+'/clear',\"清空设备\");\n    }\n\n\nfunction set(media) {\n\t  setArgument('media',media);\n\t  java.toast(\"\\n\\n已切换至：\"+media+'\\n请重新搜索书籍！');\n}\n\n\nfunction getmedia() {\n\t   \tlet media = getArgument('media');\n\t   \tif(media == '') {\n\t   \t\tmedia = '全部来源都搜索';\n\t   \t\t}\n\t\t\t  java.toast(\"\\n\\n当前搜索范围是：\"+media);\n\t\t\t  \n}\n\n//获取服务器\nfunction get_server() {\n\t  var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：'+ server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    const currentIndex = serverList.indexOf(getArgument('server'));\n    const nextIndex = (currentIndex + 1) % serverList.length;\n    server = serverList[nextIndex];\n    setArgument('server',server);\n    java.toast('\\n\\n'+server + '\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效');\n}\n",
    "respondTime": 10023,
    "ruleBookInfo": {
      "author": "",
      "intro": "$..book_id\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet jj;\n\nvar tishi = '\\n\\n当前搜索模式：'+ ms +'\\n\\n如需切换,请点击登陆进行切换\\n切换之后需要重新搜索！\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${base_url}/novel_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\nif(!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n</js>",
      "kind": "",
      "name": "",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = java.getCookie(\"fanqienovel.com\")\n    if (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\nresult",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "coverUrl": "thumb_url",
      "intro": "abstract",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "$..book_data[*]",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nlet open_argument = source.getVariable();\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"media\": \"全部\",\n            \"server\": \"http://113.45.175.112\",\n        };\n    }\nlet base_url = open_argument.server;\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "checkKeyWord": "我的",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn null\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\nlet media = result.split(\"-\")[0];\nlet bookid = result.split(\"-\")[1].split(\"_\")[0];\nlet lasts = lastChapterTitle(media,bookid);\n`${media}: ${lasts}`\n</js>",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "$..chapterListWithVolume[*].*",
      "chapterName": "title",
      "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\n// 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\nif(!key) {\n    java.longToast('\\n\\n请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页');\n}\n\nlet catalogue_url = `${base_url}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=-1&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url",
      "updateTime": "firstPassTime"
    },
    "searchUrl": "{{key}}\n@js:\nlet search_title = result;\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\nbase_url+'/searchNovel?title='+result+'&media='+media",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "支持番茄小说，QQ免费小说，熊猫小说，得间小说，七猫小说，起点69小说\n更新说明：\n登录页新增手动切换书籍来源选项按钮\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能\n20250104新增服务器\n20250105登录新增手动填写服务器",
    "bookSourceGroup": "❤️视频,❤️番茄",
    "bookSourceName": "🌞晴天小说",
    "bookSourceType": 0,
    "bookSourceUrl": "http://api.cloudepays.cn\nhttp://api618.qingtian618.site\nhttps://api.gyks.cf\n提示：点击登录切换服务器按钮可进行切换(当前书源为纯小说阅读)",
    "bookUrlPattern": "",
    "customOrder": -5,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet keys = getArguments(open_argument,'key');\nif (!keys) {\n\tkeys = gets_key();\n\t}\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"晴天阅读记录\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&key=\" + keys,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }\n];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"media\": \"全部\",\n            \"server\": \"http://api.cloudepays.cn\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n",
    "lastUpdateTime": 1738848023387,
    "loginUi": "[\n      {\n        \"name\":  \"  请杯咖啡，破解限制  \",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"设备管理\",\n        \"type\": \"button\",\n        \"action\": \"clear()\"\n      },{\n        \"name\":  \"服务器地址(可不填)\",\n        \"type\": \"text\"\n        },{\n        \"name\":  \"更新源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"♥♥♥♥♥♥填写密钥♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"番茄登录(同步书架)\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \" 退出番茄登录 \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\":  \"当前来源\",\n        \"type\": \"button\",\n        \"action\": \"getmedia()\"\n      },{\n        \"name\":  \"搜索全部\",\n        \"type\": \"button\",\n        \"action\": \"set('搜索全部')\"\n      },{\n        \"name\":  \"搜索番茄\",\n        \"type\": \"button\",\n        \"action\": \"set('番茄')\"\n      },{\n        \"name\":  \"搜索七猫\",\n        \"type\": \"button\",\n        \"action\": \"set('七猫')\"\n      },{\n        \"name\":  \"搜索起点\",\n        \"type\": \"button\",\n        \"action\": \"set('起点')\"\n      },{\n        \"name\":  \"搜索得间\",\n        \"type\": \"button\",\n        \"action\": \"set('得间')\"\n      },{\n        \"name\":  \"搜索QQ\",\n        \"type\": \"button\",\n        \"action\": \"set('QQ')\"\n      },{\n        \"name\":  \"搜索熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set('熊猫')\"\n      },{\n        \"name\":  \"搜索轻小说\",\n        \"type\": \"button\",\n        \"action\": \"set('哔哩')\"\n      },{\n        \"name\":  \"搜索聚合\",\n        \"type\": \"button\",\n        \"action\": \"set('聚合')\"\n      }    ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        }\n    } catch (error) {\n    }\n    }\n\n\nlet server = getArgument('server');\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return ''; \n}\n\n// 填写密钥\nfunction loginqt(){\n    let key = gets_key()\n    if (key && key != \"\") {\n            java.toast(\"您已填写秘钥:\"+key);\n            return false\n        }\n    java.startBrowserAwait(getArgument('server')+'/check_key','登录晴天小说书源');\n    key = gets_key()\n    if (key){\n        java.longToast('登录成功，秘钥：'+key);\n        return true\n        } else {\n            java.toast('登录失败！！！！！');\n            return false\n            }\n}\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n //cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\t\t\nfunction api() { \tjava.startBrowserAwait(getArgument('server')+'/','首页');\n    }\nfunction hqmy() { \tjava.startBrowserAwait(getArgument('server')+'/key','密钥');\n    }\nfunction vip() { \tjava.startBrowserAwait(getArgument('server')+'/coffee',\"喝咖啡\");\n    }\nfunction clear() { \tjava.startBrowserAwait(getArgument('server')+'/clear',\"清空设备\");\n    }\n\n\nfunction set(media) {\n\t  setArgument('media',media);\n\t  java.toast(\"\\n\\n已切换至：\"+media+'\\n请重新搜索书籍！');\n}\n\n\nfunction getmedia() {\n\t   \tlet media = getArgument('media');\n\t   \tif(media == '') {\n\t   \t\tmedia = '全部来源都搜索';\n\t   \t\t}\n\t\t\t  java.toast(\"\\n\\n当前搜索范围是：\"+media);\n\t\t\t  \n}\n\n//获取服务器\nfunction get_server() {\n\t  var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：'+ server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    ;\n    if (!zdyserver) {\n        const servers = String(source.bookSourceUrl).split('\\n').map(s => s.trim()).filter(s => s && !s.includes('提示'));\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}",
    "respondTime": 4805,
    "ruleBookInfo": {
      "author": "",
      "init": "$..book_id\n<js>\nlet res = result[0];\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet sjy = '';\nlet info;\nlet bookUrl = '';\nlet lx = '';\nlet zxtime = '';\nlet zxzj = '';\nlet sy = '';\nlet jj = '';\ntry {\n\t       function setArgument(key, value) {\n        let open_argument = source.getVariable();\n        open_argument = getArguments(open_argument, '');\n        open_argument[key] = value;\n        open_argument = JSON.stringify(open_argument);\n        source.setVariable(open_argument);\n        return open_argument;\n    }\n\n    function gets_key() {\n        var servers = String(source.bookSourceUrl);\n        const serverList = servers.split('\\n');\n\n        for (let server of serverList) {\n            let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n            if (keys) {\n                let keyParts = keys.split('secretKey=');\n                if (keyParts.length > 1) {\n                    keys = keyParts[keyParts.length - 1];\n                    setArgument('key', keys);\n                    return keys;\n                }\n            }\n        }\n        return '';\n    }\n\n    let open_argument = source.getVariable();\n    let base_url = getArguments(open_argument, 'server');\n    let ms = getArguments(open_argument, 'media');\n    let key = getArguments(open_argument, 'key');\n    if (!key) {\n        key = gets_key();\n    }\n\n    var tishi = '&nbsp;&nbsp;当前搜索模式：' + ms + '\\n\\n如需切换,请点击登陆进行切换\\n切换之后需要重新搜索！\\n\\n\\u200b'\n    if (media == 'fanqie' || media == 'juxiaoshuo') {\n        try {\n            info = JSON.parse(java.ajax(`${base_url}/novel_detail?&bookid=${bookid}`));\n          try {\n                let shuyuan = info.shuyuan;\n                if (shuyuan) {\n                    let n = 0;\n                    let v = String(book.getVariable(\"custom\"));\n                    let x = v.match(/^\\d+$/) ? v : n;\n                    x = parseInt(x) < shuyuan.length ? x : n;\n                    bookUrl = shuyuan[x];\n                    bookUrl = `${base_url}/detail?bookId=${bookUrl}_juxiaoshuo`;\n                    sjy = `🎯当前书源【${x}】：${shuyuan[x]}`;\n                    sy = info.sy;\n                    lx= info.lx;\n                    zxtime= info.zxtime;\n                    zxzj= info.zxzj;\n                    jj = info.abstract;\n                    jj = `${lx}\n${zxzj}\n${zxtime}\n\\u200b\n${jj}\n\\u200b\n${sjy}\n${sy}`\ninfo = {'abstract': jj}\n                }\n            } catch (error) {\n                info = {'abstract': \"\"}\n            }\n        } catch (error) {\n            info = {'abstract': \"\"}\n        }\n    } else {\n        info = {'abstract': \"\"}\n    }\n\n    if (!key) {\n        jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    } else if (!info.abstract) {\n        jj = \"\"\n    } else {\n        jj = info.abstract\n    }\nif (!jj){tishi=''}\n    let data = {\n    \t   tishi:tishi,\n        info: jj,\n        bookUrl: bookUrl\n    };\n    JSON.stringify(data);\n} catch (error) {\n    JSON.stringify({info: '', bookUrl: ''});\n}\n</js>",
      "intro": "&nbsp;&nbsp;\n{{$.tishi}}\n{{$.info}}",
      "kind": "",
      "name": "",
      "tocUrl": "bookUrl"
    },
    "ruleContent": {
      "content": "content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = java.getCookie(\"fanqienovel.com\")\n    if (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\nresult",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "coverUrl": "thumb_url",
      "intro": "abstract",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "$..book_data[*]",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "checkKeyWord": "我的",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn ''\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\nlet media = result.split(\"-\")[0];\nlet bookid = result.split(\"-\")[1].split(\"_\")[0];\nlet lasts = lastChapterTitle(media,bookid);\n`${media}: ${lasts}`\n</js>",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "$..chapterListWithVolume[*].*",
      "chapterName": "title",
      "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\n// 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\nif(!key) {\n    java.longToast('\\n\\n请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页');\n}\n\nlet catalogue_url = `${base_url}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=-1&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url",
      "updateTime": "firstPassTime"
    },
    "searchUrl": "{{key}}\n@js:\nlet search_title = result;\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\nbase_url+'/searchNovel?title='+result+'&media='+media",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "基于 PyFQWeb 鲸落项目开发的 Legado 兼容书源",
    "bookSourceGroup": "❤️番茄,❤️常用",
    "bookSourceName": "番茄小说无密钥版1鲸落",
    "bookSourceType": 0,
    "bookSourceUrl": "http://yuefanqie.jingluo.love",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "@js:\nb = [\n  {\n    \"title\": \"我的书架\",\n    \"url\": \"https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=56910&update_version_code=56910\",\n    \"style\": {\n      \"layout_flexBasisPercent\": 1,\n      \"layout_flexGrow\": 1\n    }\n  }\n]\n\nsort0=[];//女频\nsort1=[];//男频\npush=(title, url, type1, type2)=>{\n\t\tjson = {\n\t\t\t\ttitle: title,\n\t\t\t\turl: url?url:\"\",\n\t\t\t\tstyle: {\n\t\t\t\t\t\tlayout_flexGrow: 1,\n\t\t\t\t\t\tlayout_flexBasisPercent: type1\n\t\t\t\t\t}\n\t\t\t};\n\t\treturn eval('sort'+type2+'.push(json)');\n\t};\n$$=(gender, tags, status, sort)=>{\n\t\treturn `https://tsearch.toutiaoapi.com/2/wap/search/extra/novel_operator?tab_name=%25E5%2585%25A8%25E9%2583%25A8%25E5%2588%2586%25E7%25B1%25BB&ala_src=novel_tag&gender=${gender}&is_finish=0&iid=2008145514494631&aid=13&app_name=news_article&version_code=692&version_name=6.9.2&abflag=3&partner=novel_tag&offset={{(page-1)*10}}&limit=10&tags=%5B%22${tags}%22%5D&creation_status=${status}&word_num=0&sort=${sort}`\n\t};\n\nstatus=\"ALL\",sort=0;\n[\n\t\t\t\t[\"女\",[[\"无敌\",384],[\"种田\",23],[\"萌宝\",28],[\"美食\",78],[\"游戏动漫\",57],[\"娱乐圈\",43],[\"直播\",69],[\"女扮男装\",388],[\"二次元\",39],[\"团宠\",94],[\"无cp\",392],[\"青梅竹马\",387],[\"病娇\",380],[\"科幻\",8],[\"武侠\",16],[\"年代\",79],[\"重生\",36],[\"灵异\",100],[\"公主\",83],[\"甜宠\",96],[\"盗墓\",81],[\"系统\",19],[\"女强\",86],[\"皇后\",84],[\"推理\",61],[\"文化历史\",62],[\"生活\",48],[\"反派\",369],[\"末世\",68],[\"悬疑\",10],[\"穿越\",37],[\"学霸\",82],[\"扮猪吃虎\",93],[\"清穿\",76],[\"穿书\",382],[\"快穿\",24],[\"皇叔\",87],[\"空间\",44],[\"宠妻\",30],[\"豪门总裁\",29],[\"影视小说\",45],[\"成功励志\",56],[\"职场\",127],[\"民国\",390],[\"都市生活\",2],[\"腹黑\",92],[\"星际\",77],[\"天才\",90],[\"古代言情\",5],[\"家庭\",125],[\"兽世\",72],[\"校园\",4],[\"诗歌散文\",46],[\"虐文\",95],[\"嫡女\",88],[\"王妃\",85],[\"精灵\",89],[\"幻想言情\",32],[\"现代言情\",3],[\"现言甜宠\",395],[\"现言脑洞\",267],[\"先婚后爱\",265],[\"都市日常\",261],[\"古言脑洞\",253],[\"古言萌宝\",249],[\"古言甜宠\",394],[\"现言日常\",269],[\"现言复仇\",268],[\"玄幻言情\",248],[\"医术\",247],[\"马甲\",266]]],\n\t\t[\"男\",[[\"玄幻\",7],[\"神豪\",20],[\"鉴宝\",17],[\"三国\",67],[\"二次元\",39],[\"历史\",12],[\"美食\",78],[\"奶爸\",42],[\"娱乐圈\",43],[\"洪荒\",66],[\"大唐\",73],[\"外卖\",75],[\"末世\",68],[\"都市\",1],[\"宠物\",74],[\"学霸\",82],[\"游戏动漫\",57],[\"科幻\",8],[\"体育\",15],[\"直播\",69],[\"年代\",79],[\"文化历史\",62],[\"诸天万界\",71],[\"海岛\",40],[\"神医\",26],[\"明朝\",126],[\"武侠\",16],[\"灵异\",100],[\"星际\",77],[\"穿越\",37],[\"剑道\",80],[\"都市修真\",124],[\"赘婿\",25],[\"盗墓\",81],[\"推理\",61],[\"无限流\",70],[\"种田\",23],[\"战争\",97],[\"天才\",90],[\"职场\",127],[\"悬疑\",10],[\"成功励志\",56],[\"重生\",36],[\"系统\",19],[\"空间\",44],[\"腹黑\",92],[\"诗歌散文\",46],[\"家庭\",125],[\"影视小说\",45],[\"生活\",48],[\"都市生活\",2],[\"扮猪吃虎\",93],[\"大秦\",377],[\"无敌\",384],[\"漫威\",374],[\"火影\",368],[\"西游\",373],[\"龙珠\",376],[\"聊天群\",381],[\"海贼\",370],[\"奥特同人\",367],[\"特种兵\",375],[\"反派\",369],[\"校花\",385],[\"女帝\",378],[\"单女主\",389],[\"神奇宝贝\",371],[\"九叔\",383],[\"求生\",379],[\"无女主\",391],[\"武魂\",386],[\"网游\",372],[\"战神\",27],[\"都市脑洞\",262],[\"都市种田\",263],[\"都市日常\",261],[\"历史脑洞\",272],[\"玄幻脑洞\",257],[\"奇幻仙侠\",259],[\"都市青春\",396],[\"传统玄幻\",258],[\"历史古代\",273]]]\n\t].map(([title,list], gender)=>{\n\t\tpush('༺ˇ»`ʚ'+title+'生频道ɞ´«ˇ༻',null,1,gender);\n\t\tlist.map([title,tags]=>{\n\t\t\t\tpush('༺ '+title+' ༻',(gender, tags, status, sort), 1,gender);\n\t\t\t\t[\"推荐\",\"评分\",\"热门\"].map((title,sort)=>{\n\t\t\t\t\t\t[ [\"[\"+title+\"]\",\"ALL\"],[\"完结\",\"Finished\"],[\"连载\",\"Loading\"] ].map([title,status]=>{\n\t\t\t\t\t\t\t\treturn push(title, $$(gender, tags, status, sort), 0.25,gender);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t});\nJSON.stringify(\n\tb.concat(sort1).concat(sort0)\n);",
    "jsLib": "let replaceCover = (u) => {\n    if (u.startsWith(\"https://\")) u = u.substring(8)\n    else u = u.substring(7)\n    let uArr = u.split(\"/\")\n    uArr[0] = \"https://p6-novel.byteimg.com/origin\"\n    let uArr2 = []\n    uArr.forEach((x) => {\n        if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n        else uArr2.push(x.split(\"~\")[0])\n    })\n    u = uArr2.join(\"/\")\n    return u\n}",
    "lastUpdateTime": 1731919611123,
    "loginUrl": "https://fanqienovel.com",
    "respondTime": 1932,
    "ruleBookInfo": {
      "author": "author",
      "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))",
      "init": "$.data",
      "intro": "&nbsp;&nbsp;\n📕 源名：{{$.original_book_name}}\n📖 别名：{{$.book_flight_alias_name}}\n✏️ 开坑：{{$.create_time##T|\\+.*## }}\n🏷️ 标签：{{$.tags}}\n👤 主角：{{$.roles##\\[|\\\"|\\]}}\n👁️ 在线：{{$.read_count}}人在读{{\"\\n\"+\"​\"}}\n📜 简介：{{$.abstract}}{{\"\\n\"+\"​\"}}\n📍 {{$.copyright_info##，.*##。}}\n@js:result.replace(/.+：(人在读)?\\n/g,\"\")",
      "kind": "男生{{$.gender}}女生\n{{$.category}}\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{java.timeFormatUTC(java.getString(\"last_chapter_update_time\")*1000,'yyyy-MM-dd',8)}}\n##连载0|1完结|男生0|1女生\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "lastChapter": "{{$.last_chapter_title}} • {{java.timeFormat(java.getString(\"last_chapter_update_time\")*1000)}}",
      "name": "book_name",
      "tocUrl": "{{source.bookSourceUrl}}/catalog?book_id={{$.book_id}}",
      "wordCount": "word_number"
    },
    "ruleContent": {
      "content": "<js>\nlet res = JSON.parse(result).data.content\nfunction getComic(result) {\n  let mat = result.match(/<article>([\\s\\S]*?)<\\/article>/);\n  try {\n    let cnt = JSON.parse(\n      mat\n        ? mat[1].replace(/\\&/g, '\"').replace(/\\;/g, \"\").replace(/\\#34/g, \"\")\n        : result\n    );\n    return (mat ? cnt.skeleton.data : cnt.picInfos)\n      .map((i) => {\n        let path = mat\n          ? cnt.materials[i.element_name].data.web_uri\n          : \"novel-pic/\" + i.md5;\n        return `<img src=\"https://p3-novel.byteimg.com/origin/${path}\">`;\n      })\n      .join(\"<br>\");\n  } catch (e) { // not comic content\n    mat = result.match(/<body>([\\s\\S]*?)<\\/body>/)\n    // java.log(result)\n    return (mat ? mat[1] : result).toString().replace(/\\<\\!DOCTYPE html.*/g, \"\").replace(/\\<tt_keyword_ad.*\\<\\/tt_keyword_ad\\>/, \"\").replace(/\\<a epub.*\\>\\<\\/a\\>/g, \"\")\n  }\n}\nresult = getComic(String(res));\nresult.replace(/\\{\\!\\-\\- PGC_VOICE\\:.*\\-\\-\\}/g, \"\")\n</js>"
    },
    "ruleExplore": {
      "author": "$.author",
      "bookList": "<js>\nlet replaceCover = (u) => {\n// java.log(u)\nif (u.startsWith(\"https://\")) u = u.substring(8)\nelse u = u.substring(7)\nlet uArr = u.split(\"/\")\nuArr[0] = \"https://p6-novel.byteimg.com/origin\"\nlet uArr2 = []\nuArr.forEach((x) => {\n    if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n    else uArr2.push(x.split(\"~\")[0])\n\t})\nu = uArr2.join(\"/\")\nreturn u\n\t}\n  let list = [];\n  let resultData = JSON.parse(result).data;\n  // java.log(resultData)\n  let data;\n  if (resultData != null && resultData.book_shelf_info) {\n    data = resultData.book_shelf_info;\n    if (data != null) {\n    let requestData = { books: [] };\n    for (let i in data) {\n      requestData[\"books\"].push({\n        book_id: data[i][\"book_id\"],\n        item_id: \"0\",\n      });\n    }\n    // java.log(JSON.stringify(resultData.book_shelf_info))\n    let booksData = java.ajax(\n      'https://fanqienovel.com/api/bookshelf/multidetail,{method: \"post\",body: ' +\n        JSON.stringify(requestData) +\n        \"}\"\n    );\n    // java.log(booksData)\n    let books =  JSON.parse(booksData).data.detail_list;\n    for (let i in books) {\n      let d = books[i];\n      list.push({\n        src: d,\n        book_name: d.book_name,\n        thumb_url: replaceCover(d.thumb_url),\n        abstract: d.abstract,\n        book_id: d.book_id,\n      });\n    }\n    }\n  } else list = JSON.parse(result)[0].content\n  JSON.stringify(list)\n</js>$[*]",
      "bookUrl": "{{source.bookSourceUrl}}/detail?book_id={{$.book_id}}",
      "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))",
      "intro": "$.abstract##\\n",
      "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "lastChapter": "",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "<js>\nlet res = JSON.parse(result)\nlet books\n\nif (res.search_tabs) {\n  res.search_tabs.forEach((i) => {\n    if (i.tab_type == 3) books = i.data\n  })\n} else books = res.data\n\nlet results = []\n\nbooks.forEach(w => {\n  results.push(w.book_data[0])\n})\n\nJSON.stringify(results)\n</js>$[*]",
      "bookUrl": "{{source.bookSourceUrl}}/detail?book_id={{$.book_id}}",
      "checkKeyWord": "转生三无猫娘，成神的我只想摸鱼",
      "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))",
      "intro": "abstract##\\n",
      "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "data.item_data_list[*]",
      "chapterName": "title",
      "chapterUrl": "{{source.bookSourceUrl}}/content?item_id={{$.item_id}}",
      "updateTime": "{{$.volume_name}} | {{$.chapter_word_number}}字 | {{java.timeFormatUTC(java.getString(\"first_pass_time\") * 1000, 'yyyy-MM-dd HH:mm:ss', 12)}}##第一卷：默认\n@js:\nif (result.startsWith(\" |\")) result = result.slice(2)\nresult"
    },
    "searchUrl": "/search?query={{key}}&offset={{ ( page - 1 ) * 10 }}",
    "weight": 0
  },
  {
    "bookSourceComment": "基于 PyFQWeb 鲸落项目开发的 Legado 兼容书源",
    "bookSourceGroup": "❤️番茄,❤️常用",
    "bookSourceName": "番茄小说无密钥版2鲸落",
    "bookSourceType": 0,
    "bookSourceUrl": "http://apifanqie.jingluo.love",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "@js:\nb = [\n  {\n    \"title\": \"我的书架\",\n    \"url\": \"https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=56910&update_version_code=56910\",\n    \"style\": {\n      \"layout_flexBasisPercent\": 1,\n      \"layout_flexGrow\": 1\n    }\n  }\n]\n\nsort0=[];//女频\nsort1=[];//男频\npush=(title, url, type1, type2)=>{\n\t\tjson = {\n\t\t\t\ttitle: title,\n\t\t\t\turl: url?url:\"\",\n\t\t\t\tstyle: {\n\t\t\t\t\t\tlayout_flexGrow: 1,\n\t\t\t\t\t\tlayout_flexBasisPercent: type1\n\t\t\t\t\t}\n\t\t\t};\n\t\treturn eval('sort'+type2+'.push(json)');\n\t};\n$$=(gender, tags, status, sort)=>{\n\t\treturn `https://tsearch.toutiaoapi.com/2/wap/search/extra/novel_operator?tab_name=%25E5%2585%25A8%25E9%2583%25A8%25E5%2588%2586%25E7%25B1%25BB&ala_src=novel_tag&gender=${gender}&is_finish=0&iid=2008145514494631&aid=13&app_name=news_article&version_code=692&version_name=6.9.2&abflag=3&partner=novel_tag&offset={{(page-1)*10}}&limit=10&tags=%5B%22${tags}%22%5D&creation_status=${status}&word_num=0&sort=${sort}`\n\t};\n\nstatus=\"ALL\",sort=0;\n[\n\t\t\t\t[\"女\",[[\"无敌\",384],[\"种田\",23],[\"萌宝\",28],[\"美食\",78],[\"游戏动漫\",57],[\"娱乐圈\",43],[\"直播\",69],[\"女扮男装\",388],[\"二次元\",39],[\"团宠\",94],[\"无cp\",392],[\"青梅竹马\",387],[\"病娇\",380],[\"科幻\",8],[\"武侠\",16],[\"年代\",79],[\"重生\",36],[\"灵异\",100],[\"公主\",83],[\"甜宠\",96],[\"盗墓\",81],[\"系统\",19],[\"女强\",86],[\"皇后\",84],[\"推理\",61],[\"文化历史\",62],[\"生活\",48],[\"反派\",369],[\"末世\",68],[\"悬疑\",10],[\"穿越\",37],[\"学霸\",82],[\"扮猪吃虎\",93],[\"清穿\",76],[\"穿书\",382],[\"快穿\",24],[\"皇叔\",87],[\"空间\",44],[\"宠妻\",30],[\"豪门总裁\",29],[\"影视小说\",45],[\"成功励志\",56],[\"职场\",127],[\"民国\",390],[\"都市生活\",2],[\"腹黑\",92],[\"星际\",77],[\"天才\",90],[\"古代言情\",5],[\"家庭\",125],[\"兽世\",72],[\"校园\",4],[\"诗歌散文\",46],[\"虐文\",95],[\"嫡女\",88],[\"王妃\",85],[\"精灵\",89],[\"幻想言情\",32],[\"现代言情\",3],[\"现言甜宠\",395],[\"现言脑洞\",267],[\"先婚后爱\",265],[\"都市日常\",261],[\"古言脑洞\",253],[\"古言萌宝\",249],[\"古言甜宠\",394],[\"现言日常\",269],[\"现言复仇\",268],[\"玄幻言情\",248],[\"医术\",247],[\"马甲\",266]]],\n\t\t[\"男\",[[\"玄幻\",7],[\"神豪\",20],[\"鉴宝\",17],[\"三国\",67],[\"二次元\",39],[\"历史\",12],[\"美食\",78],[\"奶爸\",42],[\"娱乐圈\",43],[\"洪荒\",66],[\"大唐\",73],[\"外卖\",75],[\"末世\",68],[\"都市\",1],[\"宠物\",74],[\"学霸\",82],[\"游戏动漫\",57],[\"科幻\",8],[\"体育\",15],[\"直播\",69],[\"年代\",79],[\"文化历史\",62],[\"诸天万界\",71],[\"海岛\",40],[\"神医\",26],[\"明朝\",126],[\"武侠\",16],[\"灵异\",100],[\"星际\",77],[\"穿越\",37],[\"剑道\",80],[\"都市修真\",124],[\"赘婿\",25],[\"盗墓\",81],[\"推理\",61],[\"无限流\",70],[\"种田\",23],[\"战争\",97],[\"天才\",90],[\"职场\",127],[\"悬疑\",10],[\"成功励志\",56],[\"重生\",36],[\"系统\",19],[\"空间\",44],[\"腹黑\",92],[\"诗歌散文\",46],[\"家庭\",125],[\"影视小说\",45],[\"生活\",48],[\"都市生活\",2],[\"扮猪吃虎\",93],[\"大秦\",377],[\"无敌\",384],[\"漫威\",374],[\"火影\",368],[\"西游\",373],[\"龙珠\",376],[\"聊天群\",381],[\"海贼\",370],[\"奥特同人\",367],[\"特种兵\",375],[\"反派\",369],[\"校花\",385],[\"女帝\",378],[\"单女主\",389],[\"神奇宝贝\",371],[\"九叔\",383],[\"求生\",379],[\"无女主\",391],[\"武魂\",386],[\"网游\",372],[\"战神\",27],[\"都市脑洞\",262],[\"都市种田\",263],[\"都市日常\",261],[\"历史脑洞\",272],[\"玄幻脑洞\",257],[\"奇幻仙侠\",259],[\"都市青春\",396],[\"传统玄幻\",258],[\"历史古代\",273]]]\n\t].map(([title,list], gender)=>{\n\t\tpush('༺ˇ»`ʚ'+title+'生频道ɞ´«ˇ༻',null,1,gender);\n\t\tlist.map([title,tags]=>{\n\t\t\t\tpush('༺ '+title+' ༻',(gender, tags, status, sort), 1,gender);\n\t\t\t\t[\"推荐\",\"评分\",\"热门\"].map((title,sort)=>{\n\t\t\t\t\t\t[ [\"[\"+title+\"]\",\"ALL\"],[\"完结\",\"Finished\"],[\"连载\",\"Loading\"] ].map([title,status]=>{\n\t\t\t\t\t\t\t\treturn push(title, $$(gender, tags, status, sort), 0.25,gender);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t});\nJSON.stringify(\n\tb.concat(sort1).concat(sort0)\n);",
    "jsLib": "let replaceCover = (u) => {\n    if (u.startsWith(\"https://\")) u = u.substring(8)\n    else u = u.substring(7)\n    let uArr = u.split(\"/\")\n    uArr[0] = \"https://p6-novel.byteimg.com/origin\"\n    let uArr2 = []\n    uArr.forEach((x) => {\n        if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n        else uArr2.push(x.split(\"~\")[0])\n    })\n    u = uArr2.join(\"/\")\n    return u\n}",
    "lastUpdateTime": 1733883275217,
    "loginUrl": "https://fanqienovel.com",
    "respondTime": 1904,
    "ruleBookInfo": {
      "author": "author",
      "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))",
      "init": "$.data",
      "intro": "&nbsp;&nbsp;\n📕 源名：{{$.original_book_name}}\n📖 别名：{{$.book_flight_alias_name}}\n✏️ 开坑：{{$.create_time##T|\\+.*## }}\n🏷️ 标签：{{$.tags}}\n👤 主角：{{$.roles##\\[|\\\"|\\]}}\n👁️ 在线：{{$.read_count}}人在读{{\"\\n\"+\"​\"}}\n📜 简介：{{$.abstract}}{{\"\\n\"+\"​\"}}\n📍 {{$.copyright_info##，.*##。}}\n@js:result.replace(/.+：(人在读)?\\n/g,\"\")",
      "kind": "男生{{$.gender}}女生\n{{$.category}}\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{java.timeFormatUTC(java.getString(\"last_chapter_update_time\")*1000,'yyyy-MM-dd',8)}}\n##连载0|1完结|男生0|1女生\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "lastChapter": "{{$.last_chapter_title}} • {{java.timeFormat(java.getString(\"last_chapter_update_time\")*1000)}}",
      "name": "book_name",
      "tocUrl": "{{source.bookSourceUrl}}/catalog?book_id={{$.book_id}}",
      "wordCount": "word_number"
    },
    "ruleContent": {
      "content": "<js>\nlet res = JSON.parse(result).data.content\nfunction getComic(result) {\n  let mat = result.match(/<article>([\\s\\S]*?)<\\/article>/);\n  try {\n    let cnt = JSON.parse(\n      mat\n        ? mat[1].replace(/\\&/g, '\"').replace(/\\;/g, \"\").replace(/\\#34/g, \"\")\n        : result\n    );\n    return (mat ? cnt.skeleton.data : cnt.picInfos)\n      .map((i) => {\n        let path = mat\n          ? cnt.materials[i.element_name].data.web_uri\n          : \"novel-pic/\" + i.md5;\n        return `<img src=\"https://p3-novel.byteimg.com/origin/${path}\">`;\n      })\n      .join(\"<br>\");\n  } catch (e) { // not comic content\n    mat = result.match(/<body>([\\s\\S]*?)<\\/body>/)\n    // java.log(result)\n    return (mat ? mat[1] : result).toString().replace(/\\<\\!DOCTYPE html.*/g, \"\").replace(/\\<tt_keyword_ad.*\\<\\/tt_keyword_ad\\>/, \"\").replace(/\\<a epub.*\\>\\<\\/a\\>/g, \"\")\n  }\n}\nresult = getComic(String(res));\nresult.replace(/\\{\\!\\-\\- PGC_VOICE\\:.*\\-\\-\\}/g, \"\")\n</js>"
    },
    "ruleExplore": {
      "author": "$.author",
      "bookList": "<js>\nlet replaceCover = (u) => {\n// java.log(u)\nif (u.startsWith(\"https://\")) u = u.substring(8)\nelse u = u.substring(7)\nlet uArr = u.split(\"/\")\nuArr[0] = \"https://p6-novel.byteimg.com/origin\"\nlet uArr2 = []\nuArr.forEach((x) => {\n    if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n    else uArr2.push(x.split(\"~\")[0])\n\t})\nu = uArr2.join(\"/\")\nreturn u\n\t}\n  let list = [];\n  let resultData = JSON.parse(result).data;\n  // java.log(resultData)\n  let data;\n  if (resultData != null && resultData.book_shelf_info) {\n    data = resultData.book_shelf_info;\n    if (data != null) {\n    let requestData = { books: [] };\n    for (let i in data) {\n      requestData[\"books\"].push({\n        book_id: data[i][\"book_id\"],\n        item_id: \"0\",\n      });\n    }\n    // java.log(JSON.stringify(resultData.book_shelf_info))\n    let booksData = java.ajax(\n      'https://fanqienovel.com/api/bookshelf/multidetail,{method: \"post\",body: ' +\n        JSON.stringify(requestData) +\n        \"}\"\n    );\n    // java.log(booksData)\n    let books =  JSON.parse(booksData).data.detail_list;\n    for (let i in books) {\n      let d = books[i];\n      list.push({\n        src: d,\n        book_name: d.book_name,\n        thumb_url: replaceCover(d.thumb_url),\n        abstract: d.abstract,\n        book_id: d.book_id,\n      });\n    }\n    }\n  } else list = JSON.parse(result)[0].content\n  JSON.stringify(list)\n</js>$[*]",
      "bookUrl": "{{source.bookSourceUrl}}/detail?book_id={{$.book_id}}",
      "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))",
      "intro": "$.abstract##\\n",
      "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "lastChapter": "",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "<js>\nlet res = JSON.parse(result)\nlet books\n\nif (res.search_tabs) {\n  res.search_tabs.forEach((i) => {\n    if (i.tab_type == 3) books = i.data\n  })\n} else books = res.data\n\nlet results = []\n\nbooks.forEach(w => {\n  results.push(w.book_data[0])\n})\n\nJSON.stringify(results)\n</js>$[*]",
      "bookUrl": "{{source.bookSourceUrl}}/detail?book_id={{$.book_id}}",
      "checkKeyWord": "转生三无猫娘，成神的我只想摸鱼",
      "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))",
      "intro": "abstract##\\n",
      "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "data.item_data_list[*]",
      "chapterName": "title",
      "chapterUrl": "{{source.bookSourceUrl}}/content?item_id={{$.item_id}}",
      "updateTime": "{{$.volume_name}} | {{$.chapter_word_number}}字 | {{java.timeFormatUTC(java.getString(\"first_pass_time\") * 1000, 'yyyy-MM-dd HH:mm:ss', 12)}}##第一卷：默认\n@js:\nif (result.startsWith(\" |\")) result = result.slice(2)\nresult"
    },
    "searchUrl": "/search?query={{key}}&offset={{ ( page - 1 ) * 10 }}",
    "weight": 0
  },
  {
    "bookSourceComment": "支持番茄小说，QQ免费小说，熊猫小说，得间小说，七猫小说等\n重新写的一个接口，不是网页版\n每天限制100章阅读，想要阅读更多请注册密钥后使用，注册密钥是免费自主注册，请提防第三方买卖密钥的行为\n香色闺阁已更新免密钥版本，网站首页更新书源\n原来的兼容版书源已替换为免密钥版本\n有问题请进QQ反馈群:942393145",
    "bookSourceGroup": "❤️番茄,❤️常用",
    "bookSourceName": "番茄免密钥版本<晴天>",
    "bookSourceType": 0,
    "bookSourceUrl": "http://api.cloudepays.cn#\n2024年12月16日10:30官方重制版",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "[{\"title\":\"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐榜单\",\"url\":\"/discover?page={{page}}&side_type=10\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"完结榜单\",\"url\":\"/discover?page={{page}}&side_type=11\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热搜榜单\",\"url\":\"/discover?page={{page}}&side_type=12\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"黑马榜单\",\"url\":\"/discover?page={{page}}&side_type=13\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"爆更榜单\",\"url\":\"/discover?page={{page}}&side_type=15\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"巅峰榜单\",\"url\":\"/discover?page={{page}}&type=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"男频精选\",\"url\":\"/discover?page={{page}}&type=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"女频精选\",\"url\":\"/discover?page={{page}}&type=3\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"每周推荐\",\"url\":\"/discover?page={{page}}&type=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"❦ 男生频道 ❧\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"༺༴ 玄幻 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=7&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=7&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=7&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=1&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=1&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=1&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 洪荒 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=66&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=66&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=66&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 无敌 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=384&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=384&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=384&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 末世 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=68&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=68&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=68&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 诸天万界 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=71&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=71&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=71&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 科幻 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=8&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=8&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=8&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 星际 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=77&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=77&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=77&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 重生 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=36&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=36&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=36&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 系统 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=19&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=19&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=19&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 神豪 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=20&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=20&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=20&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 鉴宝 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=17&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=17&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=17&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 三国 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=67&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=67&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=67&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 二次元 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=39&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=39&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=39&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 历史 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=12&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=12&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=12&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 美食 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=78&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=78&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=78&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 奶爸 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=42&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=42&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=42&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 娱乐圈 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=43&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=43&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=43&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 大唐 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=73&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=73&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=73&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 外卖 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=75&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=75&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=75&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 宠物 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=74&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=74&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=74&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 学霸 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=82&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=82&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=82&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 游戏动漫 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=57&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=57&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=57&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 体育 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=15&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=15&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=15&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 直播 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=69&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=69&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=69&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 年代 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=79&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=79&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=79&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 文化历史 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=62&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=62&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=62&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 海岛 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=40&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=40&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=40&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 神医 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=26&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=26&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=26&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 明朝 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=126&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=126&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=126&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 武侠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=16&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=16&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=16&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 灵异 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=100&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=100&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=100&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 穿越 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=37&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=37&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=37&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 剑道 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=80&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=80&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=80&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市修真 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=124&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=124&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=124&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 赘婿 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=25&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=25&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=25&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 盗墓 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=81&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=81&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=81&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 推理 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=61&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=61&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=61&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 无限流 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=70&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=70&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=70&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 种田 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=23&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=23&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=23&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 战争 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=97&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=97&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=97&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 天才 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=90&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=90&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=90&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 职场 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=127&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=127&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=127&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 悬疑 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=10&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=10&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=10&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 成功励志 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=56&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=56&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=56&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 空间 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=44&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=44&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=44&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 腹黑 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=92&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=92&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=92&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 诗歌散文 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=46&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=46&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=46&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 家庭 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=125&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=125&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=125&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 影视小说 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=45&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=45&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=45&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 生活 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=48&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=48&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=48&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市生活 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=2&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=2&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=2&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 扮猪吃虎 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=93&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=93&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=93&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 大秦 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=377&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=377&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=377&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 漫威 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=374&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=374&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=374&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 火影 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=368&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=368&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=368&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 西游 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=373&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=373&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=373&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 龙珠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=376&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=376&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=376&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 聊天群 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=381&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=381&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=381&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 海贼 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=370&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=370&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=370&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 奥特同人 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=367&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=367&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=367&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 特种兵 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=375&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=375&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=375&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 反派 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=369&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=369&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=369&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 校花 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=385&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=385&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=385&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 女帝 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=378&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=378&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=378&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 单女主 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=389&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=389&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=389&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 神奇宝贝 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=371&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=371&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=371&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 九叔 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=383&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=383&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=383&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 求生 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=379&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=379&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=379&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 无女主 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=391&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=391&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=391&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 武魂 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=386&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=386&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=386&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 网游 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=372&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=372&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=372&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 战神 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=27&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=27&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=27&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市脑洞 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=262&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=262&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=262&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市种田 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=263&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=263&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=263&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市日常 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=261&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=261&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=261&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 历史脑洞 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=272&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=272&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=272&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 玄幻脑洞 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=257&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=257&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=257&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 奇幻仙侠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=259&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=259&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=259&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市青春 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=396&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=396&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=396&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 传统玄幻 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=258&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=258&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=258&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 历史古代 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=273&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=273&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=273&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"❦ 女生频道 ❧\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"༺༴ 幻想言情 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=32&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=32&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=32&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 现代言情 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=3&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=3&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=3&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 现言甜宠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=395&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=395&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=395&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 现言脑洞 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=267&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=267&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=267&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 先婚后爱 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=265&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=265&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=265&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市日常 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=261&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=261&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=261&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 古言脑洞 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=253&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=253&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=253&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 古言萌宝 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=249&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=249&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=249&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 古言甜宠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=394&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=394&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=394&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 现言日常 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=269&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=269&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=269&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 现言复仇 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=268&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=268&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=268&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 玄幻言情 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=248&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=248&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=248&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 医术 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=247&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=247&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=247&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 无敌 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=384&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=384&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=384&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 种田 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=23&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=23&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=23&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 萌宝 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=28&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=28&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=28&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 美食 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=78&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=78&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=78&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 游戏动漫 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=57&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=57&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=57&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 娱乐圈 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=43&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=43&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=43&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 直播 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=69&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=69&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=69&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 女扮男装 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=388&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=388&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=388&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 二次元 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=39&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=39&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=39&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 团宠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=94&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=94&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=94&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 无cp ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=392&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=392&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=392&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 青梅竹马 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=387&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=387&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=387&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 病娇 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=380&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=380&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=380&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 科幻 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=8&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=8&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=8&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 武侠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=16&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=16&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=16&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 年代 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=79&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=79&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=79&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 重生 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=36&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=36&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=36&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 灵异 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=100&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=100&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=100&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 公主 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=83&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=83&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=83&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 甜宠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=96&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=96&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=96&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 盗墓 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=81&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=81&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=81&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 系统 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=19&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=19&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=19&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 女强 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=86&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=86&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=86&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 皇后 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=84&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=84&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=84&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 推理 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=61&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=61&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=61&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 文化历史 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=62&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=62&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=62&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 生活 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=48&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=48&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=48&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 反派 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=369&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=369&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=369&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 末世 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=68&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=68&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=68&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 悬疑 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=10&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=10&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=10&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 穿越 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=37&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=37&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=37&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 学霸 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=82&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=82&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=82&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 扮猪吃虎 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=93&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=93&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=93&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 清穿 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=76&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=76&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=76&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 穿书 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=382&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=382&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=382&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 快穿 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=24&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=24&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=24&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 皇叔 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=87&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=87&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=87&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 空间 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=44&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=44&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=44&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 宠妻 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=30&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=30&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=30&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 豪门总裁 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=29&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=29&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=29&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 影视小说 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=45&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=45&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=45&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 成功励志 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=56&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=56&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=56&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 职场 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=127&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=127&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=127&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 民国 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=390&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=390&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=390&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市生活 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=2&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=2&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=2&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 腹黑 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=92&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=92&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=92&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 星际 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=77&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=77&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=77&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 天才 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=90&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=90&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=90&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 古代言情 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=5&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=5&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=5&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 家庭 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=125&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=125&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=125&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 兽世 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=72&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=72&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=72&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 校园 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=4&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=4&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=4&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 诗歌散文 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=46&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=46&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=46&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 虐文 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=95&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=95&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=95&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 嫡女 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=88&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=88&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=88&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 王妃 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=85&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=85&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=85&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 精灵 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=89&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=89&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=89&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 马甲 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=266&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=266&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=266&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}}]",
    "header": "",
    "lastUpdateTime": 1735217206273,
    "loginUi": "",
    "loginUrl": "http://api.cloudepays.cn",
    "respondTime": 6778,
    "ruleBookInfo": {
      "author": "",
      "coverUrl": "",
      "init": "",
      "intro": "",
      "kind": "",
      "lastChapter": "",
      "name": "",
      "tocUrl": "",
      "wordCount": ""
    },
    "ruleContent": {
      "content": "$.content",
      "imageStyle": "",
      "nextContentUrl": "",
      "replaceRegex": "",
      "sourceRegex": "",
      "webJs": ""
    },
    "ruleExplore": {
      "author": "$.author",
      "bookList": "$.data.data",
      "bookUrl": "{{source.bookSourceUrl.split(\"#\")[0]}}/detail?bookId={{$..book_id}}",
      "coverUrl": "$.thumb_url##(\\d+)-tt##6-novel",
      "intro": "$.abstract##\\s",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$..book_data[*]",
      "bookUrl": "{{source.bookSourceUrl.split(\"#\")[0]}}/detail?bookId={{$..book_id}}",
      "coverUrl": "$.thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "$.tags",
      "lastChapter": "$.lastChapterTitlde",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$..chapterListWithVolume[*].*",
      "chapterName": "$.title",
      "chapterUrl": "{{source.bookSourceUrl.split(\"#\")[0]}}/no_key_reader?item_id={{$..itemId}}&tone_id=-1",
      "isVip": "",
      "nextTocUrl": "",
      "updateTime": ""
    },
    "searchUrl": "{{source.bookSourceUrl.split(\"#\")[0]}}/searchNovel?title={{key}}",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "支持番茄小说，QQ免费小说，熊猫小说，得间小说，七猫小说，起点69小说\n更新说明：\n登录页新增手动切换书籍来源选项按钮\n20241126修复bug\n20241129更新秘钥填写方式",
    "bookSourceGroup": "❤️番茄,❤️常用",
    "bookSourceName": "晴天小说<晴天>",
    "bookSourceType": 0,
    "bookSourceUrl": "http://novel.cloudepays.cn",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "<js>\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))))) {\n    function groupQuery() {\n        const url = \"{{source.bookSourceUrl}}/group_name?cookie={{get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": \"{{source.bookSourceUrl}}/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = '{{source.bookSourceUrl}}/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": \"{{source.bookSourceUrl}}/bookshelf?page={{page}}&cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"晴天阅读记录\",\n        \"url\": \"{{source.bookSourceUrl}}/bookshelf?page={{page}}&key={{get_key(String(cookie.getCookie(source.bookSourceUrl) || java.getCookie(source.bookSourceUrl)))}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }\n];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `{{source.bookSourceUrl}}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}",
    "lastUpdateTime": 1735285967999,
    "loginUi": "[\n{\n        \"name\":  \"  请杯咖啡，破解限制  \",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"设备管理\",\n        \"type\": \"button\",\n        \"action\": \"clear()\"\n      },\n{\n        \"name\":  \"获取密钥\",\n        \"type\": \"button\",\n        \"action\": \"hqmy()\"\n      },\n    {\n        \"name\":  \"更新书源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"查看密钥\",\n        \"type\": \"button\",\n        \"action\": \"qtout()\"\n      },\n\n  {\n        \"name\":  \"♥♥♥♥♥♥填写密钥♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"qtlogin()\"\n      },\n\n    {\n        \"name\":  \"番茄登录(同步书架)\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },\n\n    {\n        \"name\":  \" 退出番茄登录 \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\":  \"搜索番茄\",\n        \"type\": \"button\",\n        \"action\": \"set('番茄')\"\n      },{\n        \"name\":  \"搜索七猫\",\n        \"type\": \"button\",\n        \"action\": \"set('七猫')\"\n      }\n,{\n        \"name\":  \"搜索起点\",\n        \"type\": \"button\",\n        \"action\": \"set('起点')\"\n      },{\n        \"name\":  \"搜索得间\",\n        \"type\": \"button\",\n        \"action\": \"set('得间')\"\n      },{\n        \"name\":  \"搜索QQ\",\n        \"type\": \"button\",\n        \"action\": \"set('QQ')\"\n      },{\n        \"name\":  \"搜索熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set('熊猫')\"\n      },{\n        \"name\":  \"搜索全部\",\n        \"type\": \"button\",\n        \"action\": \"set('搜索全部')\"\n      }\n,{\n        \"name\":  \"当前来源\",\n        \"type\": \"button\",\n        \"action\": \"getmedia()\"\n      }\n\n    ]",
    "loginUrl": "function qtlogin() {\njava.startBrowserAwait(source.bookSourceUrl+'/check_key','登录晴天小说书源');\nlet key = String(cookie.getCookie(source.bookSourceUrl));\nkey = key.split('secretKey=');\nkey = key[key.length-1];\nif (key){\n\tjava.longToast('登录成功，秘钥：'+key);\n\treturn true\n\t} else {\n\t\tjava.toast('登录失败！！！！！');\n\t\treturn false\n\t\t}\n}\n\nfunction qtout() {\t\nlet key;\nkey = get_key(String(cookie.getCookie(source.bookSourceUrl) || java.getCookie(source.bookSourceUrl)))\n;\njava.toast('当前密钥:'+key);\n\t\t}\n\t\t\nfunction api() { \tjava.startBrowserAwait(source.bookSourceUrl+'/','首页');\n    }\nfunction hqmy() { \tjava.startBrowserAwait(source.bookSourceUrl+'/key','密钥');\n    }\nfunction vip() { \tjava.startBrowserAwait(source.bookSourceUrl+'/coffee',\"喝咖啡\");\n    }\nfunction clear() { \tjava.startBrowserAwait(source.bookSourceUrl+'/clear',\"清空设备\");\n    }\n\nfunction fq_login() { \t\n\tvar cookies = cookie.getCookie(\"fanqienovel.com\")\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n\n// 退出登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    java.toast(\"退出登录成功\");\n}\n\nfunction set(media) {\n\tif (media==='搜索全部'){\n\t\tsource.setVariable('');\n\t\t\n\t\t} else {\n\t\t\tsource.setVariable(media);\n\t\t\t};\n\t  java.toast(\"\\n已切换至：\"+media+'\\n请重新搜索书籍！');\n}\n\n\nfunction getmedia() {\n\t   \tlet media = source.getVariable();\n\t   \tif(media == '') {\n\t   \t\tmedia = '全部来源都搜索';\n\t   \t\t}\n\t\t\t  java.toast(\"\\n当前搜索范围是：\"+media);\n\t\t\t  \n}",
    "respondTime": 4673,
    "ruleBookInfo": {
      "author": "",
      "intro": "$..book_id\n<js>\nlet jj;\nlet ms;\nms = String(source.getVariable())\nif (!ms) {\n    ms = '搜索全部'\n    }\n\nvar tishi = '\\n\\n当前搜索模式：'+ ms +'\\n\\n如需切换,请点击登陆进行切换\\n切换之后需要重新搜索！\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${source.bookSourceUrl}/novel_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\nlet key;\nkey = get_key(String(cookie.getCookie(source.bookSourceUrl) || java.getCookie(source.bookSourceUrl)));\n\nif(!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n\n</js>",
      "kind": "",
      "name": "",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = java.getCookie(\"fanqienovel.com\")\n    if (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\nresult",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${source.bookSourceUrl}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>\n",
      "coverUrl": "thumb_url",
      "intro": "abstract",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "$..book_data[*]",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\njava.put(\"id\", book_id);\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${source.bookSourceUrl}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "checkKeyWord": "我的",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\n\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn null\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n//let media = result.split(\"-\")[0];\n//let bookid = result.split(\"-\")[1].split(\"_\")[0];\n//let lasts = lastChapterTitle(media,bookid);\n\n//`${media}: ${lasts}`\n\nnull\n\n</js>",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "$..chapterListWithVolume[*].*",
      "chapterName": "title",
      "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\n// 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\n// 获取密钥并构建 URL\nlet key;\nkey = get_key(String(cookie.getCookie(source.bookSourceUrl) || java.getCookie(source.bookSourceUrl)));\n\nif(!key) {\n    java.longToast('\\n\\n请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页');\n}\n\nlet catalogue_url = `${source.bookSourceUrl}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=-1&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url",
      "updateTime": "firstPassTime"
    },
    "searchUrl": "{{source.bookSourceUrl}}/searchNovel?title={{key}}&media={{source.getVariable();}}",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "更新时间20241104\n新增指定来源搜索\n20241124新增详情页音色提示\n20241126修复bug\n20241129更新秘钥填写方式\n20241206",
    "bookSourceGroup": "❤️番茄,❤️常用",
    "bookSourceName": "晴天融合@番茄<晴天>",
    "bookSourceType": 0,
    "bookSourceUrl": "http://api.cloudepays.cn",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "<js>\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))))) {\n    function groupQuery() {\n        const url = \"{{source.bookSourceUrl}}/group_name?cookie={{get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": \"{{source.bookSourceUrl}}/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = '{{source.bookSourceUrl}}/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": \"{{source.bookSourceUrl}}/bookshelf?page={{page}}&cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"晴天阅读记录\",\n        \"url\": \"{{source.bookSourceUrl}}/bookshelf?page={{page}}&key={{get_key(String(cookie.getCookie(source.bookSourceUrl) || java.getCookie(source.bookSourceUrl)))}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }\n];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `{{source.bookSourceUrl}}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}",
    "lastUpdateTime": 1738938366049,
    "loginUi": "\n[ {\n        \"name\":  \"请杯咖啡，破解限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },    {\n        \"name\":  \"更新书源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },\n\n    {\n        \"name\":  \"♥♥♥填写密钥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"qtlogin()\"\n      },\n{\n        \"name\":  \"查看密钥\",\n        \"type\": \"button\",\n        \"action\": \"qtout()\"\n      },\n      {\n        \"name\":  \"当前模式\",\n        \"type\": \"button\",\n        \"action\": \"get(ms)\"\n      },   {\n        \"name\":  \"番茄登录\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },\n\n    {\n        \"name\":  \"退出番茄\",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },\n      {\n        \"name\": \"🔎搜小说\",\n        \"type\": \"button\",\n        \"action\": \"set(-1,'小说搜索')\"\n      },\n      {\n        \"name\": \"🔎搜音频\",\n        \"type\": \"button\",\n        \"action\": \"set(0,'音频搜索')\"\n      },{\n        \"name\": \"🔎搜漫画\",\n        \"type\": \"button\",\n        \"action\": \"set(-2,'漫画搜索')\"\n      },\n      {\n        \"name\": \"阅读模式\",\n        \"type\": \"button\",\n        \"action\": \"set(-1,'纯净阅读')\"\n      },\n    {\n        \"name\": \"多人发音\",\n        \"type\": \"button\",\n        \"action\": \"set(51,'多人发音')\"\n      },\n      {\n        \"name\": \"甜美少女\",\n        \"type\": \"button\",\n        \"action\": \"set(1,'甜美少女')\"\n      },\n      {\n        \"name\": \"清亮青叔\",\n        \"type\": \"button\",\n        \"action\": \"set(2,'清亮青叔')\"\n      },\n      {\n        \"name\": \"开朗青年\",\n        \"type\": \"button\",\n        \"action\": \"set(5,'开朗青年')\"\n      },\n      {\n        \"name\": \"温柔淑女\",\n        \"type\": \"button\",\n        \"action\": \"set(6,'温柔淑女')\"\n      },\n      {\n        \"name\": \"成熟大叔\",\n        \"type\": \"button\",\n        \"action\": \"set(4,'成熟大叔')\"\n      },\n      {\n        \"name\": \"大叔升级\",\n        \"type\": \"button\",\n        \"action\": \"set(74,'大叔升级')\"\n      },\n      {\n        \"name\": \"优雅御姐\",\n        \"type\": \"button\",\n        \"action\": \"set(30,'优雅御姐')\"\n      },\n      {\n        \"name\": \"其他音色请手动在详情页源变量中填写序号\",\n        \"type\": \"button\"\n      }\n    ]",
    "loginUrl": "function qtlogin() {\njava.startBrowserAwait(source.bookSourceUrl+'/check_key','登录晴天小说书源');\nlet key = String(cookie.getCookie(source.bookSourceUrl));\nkey = key.split('secretKey=');\nkey = key[key.length-1];\nif (key){\n\tjava.longToast('登录成功，秘钥：'+key);\n\treturn true\n\t} else {\n\t\tjava.toast('登录失败！！！！！');\n\t\treturn false\n\t\t}\n}\n\nfunction qtout() {\t\nlet key;\nkey = get_key(String(cookie.getCookie(source.bookSourceUrl) || java.getCookie(source.bookSourceUrl)))\n;\njava.toast('当前密钥:'+key);\n\t\t}\n\n\nfunction api() { \tjava.startBrowserAwait(source.bookSourceUrl+'/',\"接口文档\");\n    }\nfunction vip() { \tjava.startBrowserAwait(source.bookSourceUrl+'/coffee',\"喝咖啡\");\n    }\nfunction hqmy() { \tjava.startBrowserAwait(source.bookSourceUrl+'/key',\"获取密钥\");\n    }\nvar ms = source.getVariable();\nfunction get(arg) {\n\t  var datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\",\n  \"30\":\"优雅御姐\",\n   \"0\": \"音频搜索\"\n};\nvar tishi = '\\n\\n当前模式：'+datadist[arg]\n    java.toast(tishi);\n}\nfunction set(mode,name) {\n\t   let toast = \"\\n\\n已切换至：\" + name+'\\n\\n切换后需要刷新详情页';\n\t   source.setVariable(mode);\n \t   java.toast(toast);\n    }\nfunction zr() {\n\t   let toast ='\\n\\n真人语音无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n\t   java.toast(toast);\n    }\nfunction mh() {\n\t   let toast ='\\n\\n漫画无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n\t   java.toast(toast);\n    }\n\nfunction fq_login() { \t\n\tvar cookies = cookie.getCookie(\"fanqienovel.com\")\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n\n// 退出登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    java.toast(\"退出登录成功\");\n}",
    "respondTime": 3986,
    "ruleBookInfo": {
      "author": "author",
      "coverUrl": "thumb_url",
      "intro": "$..book_id\n<js>\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"真人发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\"\n};\n\nlet ms;\nms = datadist[String(source.getVariable())];\nif (!ms) {\n\t\tms = String(source.getVariable())\n\t\t}\n\nvar tishi = '\\n\\n当前模式：'+ ms +'\\n\\n如切换听书音色,切换后请下拉刷新详情页\\n由于缓存原因，已听的需要切换到下一章再切回来\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${source.bookSourceUrl}/tts_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\nlet key;\nkey = get_key(String(cookie.getCookie(source.bookSourceUrl)))\nif (!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥或密钥格式错误，请先输入正确的密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n</js>",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "lastChapter": "last_chapter_title",
      "name": "book_name",
      "tocUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\njava.put(\"id\", book_id);\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${source.bookSourceUrl}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "wordCount": "word_number"
    },
    "ruleContent": {
      "content": "content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = java.getCookie(\"fanqienovel.com\")\n    if (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\");\n    } \n\t}\nresult",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n<js>\nlet [book_id, raw_book_name, raw_author, raw_thumb_url,media] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${source.bookSourceUrl}/multi_detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "$..book_data[*]",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n<js>\nlet [book_id, raw_book_name, raw_author, raw_thumb_url,media] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${source.bookSourceUrl}/multi_detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "checkKeyWord": "炙热沦陷",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\n\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn '无'\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\nlet media = result.split(\"-\")[0];\nlet bookid = result.split(\"-\")[1].split(\"_\")[0];\nlet lasts = lastChapterTitle(media,bookid);\n\n`${media}: ${lasts}`\n</js>",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "data.chapterListWithVolume[*].*\n@js:\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nlet genreValue = JSON.parse(java.ajax(book.bookUrl)).genre;\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"真人发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\"\n};\nvar ms = String(source.getVariable())\nif (genreValue === '0' && ms === '-1') {\n\tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n} else if (genreValue === '1') {\n\t  var ms = '-2';\n\t  source.setVariable('-2');\n\t  if (device === 'android') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n}else if (genreValue === '4') {\n\t   var ms = '0';\n\t   if (device === 'android') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n} else if (genreValue === '9999'){\n   \tvar ms = '-1';\n   \tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n\t }else if (genreValue!='0' && genreValue!='1' && genreValue!='4' && ms === '-1'){\n   \tvar ms = '-1';\n   \tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n\t } else {\n\t \tif (device === 'android') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n\t \t};\nresult",
      "chapterName": "title",
      "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\n// 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\n// 获取密钥并构建 URL\nlet key;\nkey = get_key(String(cookie.getCookie(source.bookSourceUrl)))\n\nlet catalogue_url = `${source.bookSourceUrl}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=${source.getVariable()}&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url",
      "updateTime": "firstPassTime"
    },
    "searchUrl": "{{key}}\n@js:\nlet search_title = result;\nlet ms = source.getVariable();\nlet media;\nif (ms == '0') {\n    media = '{{source.bookSourceUrl}}/searchAudio?title='+search_title+'&media=喜马拉雅,番茄';\n} else if (ms == '-2') {\n    media = '{{source.bookSourceUrl}}/searchCaricature?title='+search_title+'&media=番茄';\n} else {\n     media = '{{source.bookSourceUrl}}/searchNovel?title='+search_title\n}\nlet key;\nkey = get_key(String(cookie.getCookie(source.bookSourceUrl) || java.getCookie(source.bookSourceUrl)))\nkey = '&key=' + key\nmedia + key",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "// Error: 搜索失效\n\n支持番茄真人听书和Ai朗读，搜索时尽量输入书籍全名\n新增喜马拉雅听书功能(打赏用户专享)\n新增指定来源搜索\n20241124更新可用音色提示\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能",
    "bookSourceGroup": "❤️番茄,❤️常用,搜索失效",
    "bookSourceName": "晴天听书<晴天>",
    "bookSourceType": 1,
    "bookSourceUrl": "http://audio.cloudepays.cn\nhttp://api618.qingtian618.site\nhttps://api.gyks.cf",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet dataList = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": base_url+\"/bookshelf?cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"晴天阅读记录\",\n        \"url\": base_url + \"/bookshelf?key=\"+key+\"&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"番茄书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜\",\n        \"url\": base_url + \"/discover?side_type=10&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结榜\",\n        \"url\": base_url + \"/discover?side_type=11&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"热搜榜\",\n        \"url\": base_url + \"/discover?side_type=12&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"黑马榜\",\n        \"url\": base_url + \"/discover?side_type=13&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"爆更榜\",\n        \"url\": base_url + \"/discover?side_type=15&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"巅峰榜\",\n        \"url\": base_url + \"/discover?type=0&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + \"/discover?type=2&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\": base_url + \"/discover?type=3&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url + \"/discover?type=1&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"喜马拉雅排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"˚‧º· 全站 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热播\",\n        \"url\": base_url + \"/discover?rankingId=100006&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100149&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100150&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"飙升\",\n        \"url\": base_url + \"/discover?rankingId=100559&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100007&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100271&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"VIP\",\n        \"url\": base_url + \"/discover?rankingId=100297&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"畅销\",\n        \"url\": base_url + \"/discover?rankingId=100413&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"大师课\",\n        \"url\": base_url + \"/discover?rankingId=100490&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"原创月票\",\n        \"url\": base_url + \"/discover?rankingId=100326&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"爆款月票\",\n        \"url\": base_url + \"/discover?rankingId=100325&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 小说 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100077&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100157&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100224&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100191&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100180&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"月票\",\n        \"url\": base_url + \"/discover?rankingId=100332&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"男生\",\n        \"url\": base_url + \"/discover?rankingId=100330&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"女生\",\n        \"url\": base_url + \"/discover?rankingId=100331&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"都市\",\n        \"url\": base_url + \"/discover?rankingId=100078&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"玄幻\",\n        \"url\": base_url + \"/discover?rankingId=100079&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"悬疑\",\n        \"url\": base_url + \"/discover?rankingId=100080&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"历史\",\n        \"url\": base_url + \"/discover?rankingId=100081&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"科幻\",\n        \"url\": base_url + \"/discover?rankingId=100082&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"游戏\",\n        \"url\": base_url + \"/discover?rankingId=100083&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"现言\",\n        \"url\": base_url + \"/discover?rankingId=100084&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"古言\",\n        \"url\": base_url + \"/discover?rankingId=100085&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"幻言\",\n        \"url\": base_url + \"/discover?rankingId=100086&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"悬爱\",\n        \"url\": base_url + \"/discover?rankingId=100449&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 相声评书 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100088&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100273&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100360&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"VIP\",\n        \"url\": base_url + \"/discover?rankingId=100312&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100289&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100341&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"畅销\",\n        \"url\": base_url + \"/discover?rankingId=100417&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"相声\",\n        \"url\": base_url + \"/discover?rankingId=100089&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"评书\",\n        \"url\": base_url + \"/discover?rankingId=100090&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"戏曲\",\n        \"url\": base_url + \"/discover?rankingId=100091&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"小品\",\n        \"url\": base_url + \"/discover?rankingId=100524&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 有声图书 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100096&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100274&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100361&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100288&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100342&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"个人成长\",\n        \"url\": base_url + \"/discover?rankingId=100154&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"获奖图书\",\n        \"url\": base_url + \"/discover?rankingId=100422&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"出版小说\",\n        \"url\": base_url + \"/discover?rankingId=100097&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"人物传记\",\n        \"url\": base_url + \"/discover?rankingId=100098&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"历史人文\",\n        \"url\": base_url + \"/discover?rankingId=100152&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"商业财经\",\n        \"url\": base_url + \"/discover?rankingId=100153&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"生活\",\n        \"url\": base_url + \"/discover?rankingId=100155&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 人文国学 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100099&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100240&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100266&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100245&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100256&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"文学\",\n        \"url\": base_url + \"/discover?rankingId=100100&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"国学\",\n        \"url\": base_url + \"/discover?rankingId=100101&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"哲学宗教\",\n        \"url\": base_url + \"/discover?rankingId=100445&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"名家讲学\",\n        \"url\": base_url + \"/discover?rankingId=100103&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"文化人物\",\n        \"url\": base_url + \"/discover?rankingId=100412&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"民间文学\",\n        \"url\": base_url + \"/discover?rankingId=100466&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"文化艺术\",\n        \"url\": base_url + \"/discover?rankingId=100102&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 历史 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100104&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100277&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100359&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100290&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100347&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"VIP\",\n        \"url\": base_url + \"/discover?rankingId=100309&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"畅销\",\n        \"url\": base_url + \"/discover?rankingId=100420&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"中国史\",\n        \"url\": base_url + \"/discover?rankingId=100105&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"世界史\",\n        \"url\": base_url + \"/discover?rankingId=100106&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"人物传记\",\n        \"url\": base_url + \"/discover?rankingId=100107&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"军事纪实\",\n        \"url\": base_url + \"/discover?rankingId=100108&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 悬疑 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100364&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100365&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100366&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100367&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100368&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"恐怖惊悚\",\n        \"url\": base_url + \"/discover?rankingId=100369&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"刑侦推理\",\n        \"url\": base_url + \"/discover?rankingId=100370&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 娱乐 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100122&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100275&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100358&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100291&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100340&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"月票\",\n        \"url\": base_url + \"/discover?rankingId=100338&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"笑话段子\",\n        \"url\": base_url + \"/discover?rankingId=100125&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"影视\",\n        \"url\": base_url + \"/discover?rankingId=100147&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 音乐 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100109&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"歌单上新\",\n        \"url\": base_url + \"/discover?rankingId=100561&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"热歌\",\n        \"url\": base_url + \"/discover?rankingId=100560&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100292&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100357&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100349&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"畅销\",\n        \"url\": base_url + \"/discover?rankingId=100415&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"助眠放松\",\n        \"url\": base_url + \"/discover?rankingId=100111&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"专注提神\",\n        \"url\": base_url + \"/discover?rankingId=100112&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 个人成长 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100114&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100279&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100356&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"VIP\",\n        \"url\": base_url + \"/discover?rankingId=100526&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100293&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100345&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"畅销\",\n        \"url\": base_url + \"/discover?rankingId=100419&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"个人提升\",\n        \"url\": base_url + \"/discover?rankingId=100115&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"职场进阶\",\n        \"url\": base_url + \"/discover?rankingId=100116&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"考级考证\",\n        \"url\": base_url + \"/discover?rankingId=100117&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 情感生活 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100143&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100284&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100294&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"故事\",\n        \"url\": base_url + \"/discover?rankingId=100381&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"夜听美文\",\n        \"url\": base_url + \"/discover?rankingId=100383&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"生活闲聊\",\n        \"url\": base_url + \"/discover?rankingId=100394&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"情感思维\",\n        \"url\": base_url + \"/discover?rankingId=100382&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"心理疗愈\",\n        \"url\": base_url + \"/discover?rankingId=100380&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"旅行\",\n        \"url\": base_url + \"/discover?rankingId=100423&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 健康 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100374&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100375&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100376&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100377&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"中医\",\n        \"url\": base_url + \"/discover?rankingId=100378&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"健康管理\",\n        \"url\": base_url + \"/discover?rankingId=100379&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 商业财经 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100127&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100280&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100354&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100296&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100344&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"VIP\",\n        \"url\": base_url + \"/discover?rankingId=100311&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"畅销\",\n        \"url\": base_url + \"/discover?rankingId=100416&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"投资理财\",\n        \"url\": base_url + \"/discover?rankingId=100459&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"财经通识\",\n        \"url\": base_url + \"/discover?rankingId=100461&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"宏观经济\",\n        \"url\": base_url + \"/discover?rankingId=100460&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"经营管理\",\n        \"url\": base_url + \"/discover?rankingId=100462&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"商业前沿\",\n        \"url\": base_url + \"/discover?rankingId=100463&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 外语 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100118&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100281&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100353&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100295&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100348&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口语\",\n        \"url\": base_url + \"/discover?rankingId=100119&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"听力\",\n        \"url\": base_url + \"/discover?rankingId=100120&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"读物\",\n        \"url\": base_url + \"/discover?rankingId=100121&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 热点 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100131&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100276&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100287&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"民生\",\n        \"url\": base_url + \"/discover?rankingId=100132&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"国际\",\n        \"url\": base_url + \"/discover?rankingId=100133&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"科技\",\n        \"url\": base_url + \"/discover?rankingId=100134&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"体育\",\n        \"url\": base_url + \"/discover?rankingId=100135&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 广播剧 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100136&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100282&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"免费\",\n        \"url\": base_url + \"/discover?rankingId=100352&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100285&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结\",\n        \"url\": base_url + \"/discover?rankingId=100346&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"VIP\",\n        \"url\": base_url + \"/discover?rankingId=100301&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"文学名著\",\n        \"url\": base_url + \"/discover?rankingId=100137&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"言情\",\n        \"url\": base_url + \"/discover?rankingId=100138&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"游戏动漫\",\n        \"url\": base_url + \"/discover?rankingId=100139&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"仙侠\",\n        \"url\": base_url + \"/discover?rankingId=100140&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"都市架空\",\n        \"url\": base_url + \"/discover?rankingId=100141&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"悬疑\",\n        \"url\": base_url + \"/discover?rankingId=100142&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 播客 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"故事播客\",\n        \"url\": base_url + \"/discover?rankingId=100529&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"观点播客\",\n        \"url\": base_url + \"/discover?rankingId=100558&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 影视 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100456&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"新品\",\n        \"url\": base_url + \"/discover?rankingId=100457&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100458&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"解读\",\n        \"url\": base_url + \"/discover?rankingId=100464&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 课程 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100396&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"口碑\",\n        \"url\": base_url + \"/discover?rankingId=100397&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"畅销\",\n        \"url\": base_url + \"/discover?rankingId=100414&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"人文国学\",\n        \"url\": base_url + \"/discover?rankingId=100398&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"历史\",\n        \"url\": base_url + \"/discover?rankingId=100399&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"商业财经\",\n        \"url\": base_url + \"/discover?rankingId=100400&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"个人成长\",\n        \"url\": base_url + \"/discover?rankingId=100401&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"外语\",\n        \"url\": base_url + \"/discover?rankingId=100402&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"˚‧º· 汽车 ‧º·˚\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"热门\",\n        \"url\": base_url + \"/discover?rankingId=100520&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"车闻\",\n        \"url\": base_url + \"/discover?rankingId=100521&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"车评选购\",\n        \"url\": base_url + \"/discover?rankingId=100522&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"驾照考试\",\n        \"url\": base_url + \"/discover?rankingId=100523&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"--\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    }\n]\nJSON.stringify(dataList);\n</js>",
    "jsLib": "function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key;\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"media\": \"全部\",\n            \"tone_id\": \"0\",\n            \"server\": \"http://api.cloudepays.cn\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}",
    "lastUpdateTime": 1741231853076,
    "loginUi": "\n[ {\n        \"name\":  \"☕请杯咖啡，解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },    {\n        \"name\":  \"更新书源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },\n\n    {\n        \"name\":  \"♥♥♥♥♥♥ 填写密钥 ♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"番茄登录\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },\n\n    {\n        \"name\":  \"退出登录\",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前搜索\",\n        \"type\": \"button\",\n        \"action\": \"get_media()\"\n      },\n      {\n        \"name\":  \"当前音色\",\n        \"type\": \"button\",\n        \"action\": \"get_tone_id(tone_id)\"\n      },   {\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },\n      {\n        \"name\": \"🔎全部 \",\n        \"type\": \"button\",\n        \"action\": \"set_media('全部')\"\n      },\n      {\n        \"name\": \"🔎番茄 \",\n        \"type\": \"button\",\n        \"action\": \"set_media('番茄畅听')\"\n      },{\n        \"name\": \"🔎喜马拉雅\",\n        \"type\": \"button\",\n        \"action\": \"set_media('喜马拉雅')\"\n      }, {\n        \"name\": \"默认发音\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('0','默认发音')\"\n      },\n    {\n        \"name\": \"多人发音\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('51','多人发音')\"\n      },\n      {\n        \"name\": \"甜美少女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('1','甜美少女')\"\n      },\n      {\n        \"name\": \"清亮青叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('2','清亮青叔')\"\n      },\n      {\n        \"name\": \"开朗青年\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('5','开朗青年')\"\n      },\n      {\n        \"name\": \"温柔淑女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('6','温柔淑女')\"\n      },\n      {\n        \"name\": \"成熟大叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('4','成熟大叔')\"\n      },\n      {\n        \"name\": \"大叔升级\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('74','大叔升级')\"\n      },\n      {\n        \"name\": \"优雅御姐\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('30','优雅御姐')\"\n      },\n\n      {\n        \"name\": \"其他音色填写后，需要点击下方提交\",\n        \"type\": \"text\"\n      },{\n        \"name\": \"提交(退出登录页,再次进入后提交方可生效)\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id(source.getLoginInfoMap()['其他音色填写后，需要点击下方提交'],source.getLoginInfoMap()['其他音色填写后，需要点击下方提交'])\"\n      }\n    ]",
    "loginUrl": "function login(){}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return '';  \n }\n\n// 填写密钥\nfunction loginqt(){\n    let key = gets_key()\n    if (key && key != \"\") {\n            java.toast(\"您已填写秘钥:\"+key);\n            return false\n        }\n    java.startBrowserAwait(getArgument('server')+'/check_key','登录晴天小说书源');\n    key = gets_key()\n    if (key){\n        java.longToast('登录成功，秘钥：'+key);\n        return true\n        } else {\n            java.toast('登录失败！！！！！');\n            return false\n            }\n}\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n //cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() {     java.startBrowserAwait(getArgument('server')+'/',\"接口文档\");\n    }\n//打赏\nfunction vip() {     java.startBrowserAwait(getArgument('server')+'/coffee',\"喝咖啡\");\n    }\n//获取密钥\nfunction hqmy() {     java.startBrowserAwait(getArgument('server')+'/key',\"获取密钥\");\n    }\n\nvar server = getArgument('server');\n\n//设置搜索媒体\nfunction set_media(media) {\n\t  setArgument('media',media);\n\t  java.toast(\"\\n\\n已切换至：\"+media+'\\n请重新搜索书籍！');\n}\n\n//获取搜索媒体\nfunction get_media() {\n\t   \tlet media = getArgument('media');\n\t   \tif(media == '') {\n\t   \t\tmedia = '全部来源都搜索';\n\t   \t\t}\n\t\t\t  java.toast(\"\\n\\n当前搜索范围是：\"+media);\n\t\t\t  \n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：'+ server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    const currentIndex = serverList.indexOf(getArgument('server'));\n    const nextIndex = (currentIndex + 1) % serverList.length;\n    server = serverList[nextIndex];\n    setArgument('server',server);\n    java.toast('\\n\\n'+server + '\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效');\n}\n\n\n//获取音色\nvar tone_id = getArgument('tone_id');\nfunction get_tone_id(arg) {\n      var datadist = {\n      \t     \"0\": \"默认音色\",\n            \"-1\": \"阅读模式\",\n            \"-2\": \"漫画模式\",\n            \"51\": \"多人发音\",\n            \"1\": \"甜美少女\",\n            \"2\": \"清亮青叔\",\n            \"5\": \"开朗青年\",\n            \"6\": \"温柔淑女\",\n            \"4\": \"成熟大叔\",\n            \"74\": \"大叔升级\",\n            \"30\":\"优雅御姐\"\n      };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：'+ tone_id;    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode,name) {\n\t    \t   let toast = \"\\n\\n已切换至：\" + name+'\\n\\n切换后需要刷新详情页';\n       setArgument('tone_id',mode);\n        java.toast(toast);\n    }\nfunction zr() {\n       let toast ='\\n\\n真人语音无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n       java.toast(toast);\n    }\nfunction mh() {\n       let toast ='\\n\\n漫画无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n       java.toast(toast);\n    }",
    "respondTime": 180559,
    "ruleBookInfo": {
      "author": "",
      "intro": "$..book_id\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"默认发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\",\n  '999':'喜马拉雅听书'\n};\n\nlet ms;\nms = datadist[tone_id];\nif (!ms) {\n\t\tms = tone_id\n\t\t}\n\nvar tishi = '\\n\\n当前模式：'+ ms +'\\n\\n如切换,请切换请下拉刷新详情页\\n由于缓存原因，已听的需要切换到下一章再切回来\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${base_url}/tts_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\n\nif (!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n\n</js>",
      "kind": "",
      "name": "",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = java.getCookie(\"fanqienovel.com\")\n    if (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\");\n    } \n\t}\nresult",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "coverUrl": "thumb_url",
      "intro": "abstract",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "$..book_data[*]",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\t\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "checkKeyWord": "我的",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}} 听书\n{{$.abstract}}",
      "kind": "tags",
      "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\n\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn null\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\nlet media = result.split(\"-\")[0];\nlet bookid = result.split(\"-\")[1].split(\"_\")[0];\nlet lasts = lastChapterTitle(media,bookid);\n\n`${media}: ${lasts}`\n</js>",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "$..chapterListWithVolume[*].*",
      "chapterName": "title",
      "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n// 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\nif(!key) {\n    java.longToast('\\n\\n请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页');\n}\n\nlet catalogue_url = `${base_url}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=${tone_id}&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url",
      "updateTime": "firstPassTime"
    },
    "searchUrl": "{{key}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nbase_url+'/searchAudio?title='+result+'&media='+media +\"&key=\" + key",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "// Error: 搜索失效\n\n仅支持番茄漫画\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能\n20250104新增服务器\n20250105登录新增手动填写服务器",
    "bookSourceGroup": "❤️视频,❤️漫画,❤️番茄,搜索失效",
    "bookSourceName": "🌞晴天漫画",
    "bookSourceType": 2,
    "bookSourceUrl": "http://api.cloudepays.cn\nhttp://api618.qingtian618.site\nhttps://api.gyks.cf\n提示：点击登录切换服务器按钮可进行切换(当前书源为纯漫画)",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n// 地区分类\nconst regions = {\n    \"国漫\": \"cn\",\n    \"日本\": \"jp\",\n    \"韩国\": \"kr\",\n    \"欧美\": \"en\"\n};\n\n// 类型分类\nconst bztypes = {\n    \"恋爱\": \"lianai\",\n    \"纯爱\": \"chunai\",\n    \"古风\": \"gufeng\",\n    \"异能\": \"yineng\",\n    \"悬疑\": \"xuanyi\",\n    \"剧情\": \"juqing\",\n    \"奇幻\": \"qihuan\",\n    \"玄幻\": \"xuanhuan\",\n    \"穿越\": \"chuanyue\",\n    \"冒险\": \"maoxian\",\n    \"推理\": \"tuili\",\n    \"武侠\": \"wuxia\",\n    \"格斗\": \"gedou\",\n    \"战争\": \"zhanzheng\",\n    \"热血\": \"rexue\",\n    \"搞笑\": \"gaoxiao\",\n    \"大女主\": \"danuzhu\",\n    \"都市\": \"dushi\",\n    \"总裁\": \"zongcai\",\n    \"后宫\": \"hougong\",\n    \"日常\": \"richang\",\n    \"韩漫\": \"hanman\",\n    \"少年\": \"shaonian\",\n    \"其他\": \"qita\"\n};\n\nlet datas = [{\n    \"title\": \"全部分类\",\n    \"url\": base_url+\"/discover?page={{page}}&bztype=all&region=all&state=all&bzfilter=%2a\",\n    \"style\": {\n        \"layout_flexGrow\": 1,\n        \"layout_flexBasisPercent\": 0.2\n    }\n}];\n\nfor (let bztype_k in bztypes) {\n    let bztype_v = bztypes[bztype_k];\n\n    let data = {\n        \"title\": '༺༴ '+bztype_k+' ༴༻',\n        \"url\": `${base_url}/discover?page={{page}}&bztype=${bztype_v}&region=all&state=all&bzfilter=%2a`,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    };\n    datas.push(data);\n\n    for (let region_k in regions) {\n        let region_v = regions[region_k];\n        data = {\n            \"title\": region_k,\n            \"url\": `${base_url}/discover?page={{page}}&bztype=${bztype_v}&region=${region_v}&state=all&bzfilter=%2a`,\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.2\n            }\n        };\n        datas.push(data);\n    }\n}\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"media\": \"全部\",\n            \"server\": \"http://api.cloudepays.cn\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}",
    "lastUpdateTime": 1741231858718,
    "loginUi": "[\n      {\n        \"name\":  \"  请杯咖啡，破解限制  \",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"设备管理\",\n        \"type\": \"button\",\n        \"action\": \"clear()\"\n      },{\n        \"name\":  \"服务器地址(可不填)\",\n        \"type\": \"text\"\n        },{\n        \"name\":  \"更新源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"♥♥♥♥♥♥填写密钥♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"当前来源\",\n        \"type\": \"button\",\n        \"action\": \"getmedia()\"\n      },{\n        \"name\":  \"搜索全部来源漫画\",\n        \"type\": \"button\",\n        \"action\": \"set('搜索全部')\"\n      },{\n        \"name\":  \"搜索番茄漫画\",\n        \"type\": \"button\",\n        \"action\": \"set('番茄')\"\n      },{\n        \"name\":  \"搜索包子漫画\",\n        \"type\": \"button\",\n        \"action\": \"set('包子')\"\n      }  ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        }\n    } catch (error) {\n    }\n}\n\n\nvar server = getArgument('server');\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return ''; \n}\n\n// 填写密钥\nfunction loginqt(){\n    let key = gets_key()\n    if (key && key != \"\") {\n            java.toast(\"您已填写秘钥:\"+key);\n            return false\n        }\n    java.startBrowserAwait(getArgument('server')+'/check_key','登录晴天小说书源');\n    key = gets_key()\n    if (key){\n        java.longToast('登录成功，秘钥：'+key);\n        return true\n        } else {\n            java.toast('登录失败！！！！！');\n            return false\n            }\n}\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n //cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\t\t\nfunction api() { \tjava.startBrowserAwait(getArgument('server')+'/','首页');\n    }\nfunction hqmy() { \tjava.startBrowserAwait(getArgument('server')+'/key','密钥');\n    }\nfunction vip() { \tjava.startBrowserAwait(getArgument('server')+'/coffee',\"喝咖啡\");\n    }\nfunction clear() { \tjava.startBrowserAwait(getArgument('server')+'/clear',\"清空设备\");\n    }\n\n\nfunction set(media) {\n\t  setArgument('media',media);\n\t  java.toast(\"\\n\\n已切换至：\"+media+'\\n请重新搜索书籍！');\n}\n\n\nfunction getmedia() {\n\t   \tlet media = getArgument('media');\n\t   \tif(media == '') {\n\t   \t\tmedia = '全部来源都搜索';\n\t   \t\t}\n\t\t\t  java.toast(\"\\n\\n当前搜索范围是：\"+media);\n\t\t\t  \n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：'+ server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    ;\n    if (!zdyserver) {\n        const servers = String(source.bookSourceUrl).split('\\n').map(s => s.trim()).filter(s => s && !s.includes('提示'));\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}",
    "respondTime": 185422,
    "ruleBookInfo": {
      "author": "author",
      "intro": "$..book_id\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet jj;\n\nvar tishi = '\\n\\n当前搜索模式：'+ ms +'\\n\\n如需切换,请点击登陆进行切换\\n切换之后需要重新搜索！\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${base_url}/novel_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\nif(!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n</js>",
      "kind": "category",
      "lastChapter": "last_chapter_title",
      "name": "book_name",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.data.data",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}\n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}",
      "lastChapter": "",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "$..book_data[*]",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "checkKeyWord": "炙热沦陷",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}\n{{$.abstract}}",
      "kind": "tags",
      "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\nfunction lastChapterTitle(data) {\n    const media = data.split(\"-\")[0];\n    const bookid = data.split(\"-\")[1].split(\"_\")[0];\n    let url;\n    if (media === \"番茄\") {\n        url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n    } else  {\n        return null\n    }\n}\nlastChapterTitle(result)\n</js>",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "$..chapterListWithVolume[*].*",
      "chapterName": "title",
      "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n// 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\nif(!key) {\n    java.longToast('\\n\\n请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页');\n}\n\nlet catalogue_url = `${base_url}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=-2&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url",
      "updateTime": "firstPassTime"
    },
    "searchUrl": "{{key}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nbase_url+'/searchCaricature?title='+result+'&media='+media",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "// Error: 搜索失效\n\n仅支持番茄漫画\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能",
    "bookSourceGroup": "❤️漫画,❤️番茄,搜索失效",
    "bookSourceName": "晴天漫画<晴天>",
    "bookSourceType": 2,
    "bookSourceUrl": "http://caricature.cloudepays.cn\nhttp://api618.qingtian618.site\nhttps://api.gyks.cf",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n// 地区分类\nconst regions = {\n    \"国漫\": \"cn\",\n    \"日本\": \"jp\",\n    \"韩国\": \"kr\",\n    \"欧美\": \"en\"\n};\n\n// 类型分类\nconst bztypes = {\n    \"恋爱\": \"lianai\",\n    \"纯爱\": \"chunai\",\n    \"古风\": \"gufeng\",\n    \"异能\": \"yineng\",\n    \"悬疑\": \"xuanyi\",\n    \"剧情\": \"juqing\",\n    \"奇幻\": \"qihuan\",\n    \"玄幻\": \"xuanhuan\",\n    \"穿越\": \"chuanyue\",\n    \"冒险\": \"maoxian\",\n    \"推理\": \"tuili\",\n    \"武侠\": \"wuxia\",\n    \"格斗\": \"gedou\",\n    \"战争\": \"zhanzheng\",\n    \"热血\": \"rexue\",\n    \"搞笑\": \"gaoxiao\",\n    \"大女主\": \"danuzhu\",\n    \"都市\": \"dushi\",\n    \"总裁\": \"zongcai\",\n    \"后宫\": \"hougong\",\n    \"日常\": \"richang\",\n    \"韩漫\": \"hanman\",\n    \"少年\": \"shaonian\",\n    \"其他\": \"qita\"\n};\n\nlet datas = [{\n    \"title\": \"全部分类\",\n    \"url\": base_url+\"/discover?page={{page}}&bztype=all&region=all&state=all&bzfilter=%2a\",\n    \"style\": {\n        \"layout_flexGrow\": 1,\n        \"layout_flexBasisPercent\": 0.2\n    }\n}];\n\nfor (let bztype_k in bztypes) {\n    let bztype_v = bztypes[bztype_k];\n\n    let data = {\n        \"title\": '༺༴ '+bztype_k+' ༴༻',\n        \"url\": `${base_url}/discover?page={{page}}&bztype=${bztype_v}&region=all&state=all&bzfilter=%2a`,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    };\n    datas.push(data);\n\n    for (let region_k in regions) {\n        let region_v = regions[region_k];\n        data = {\n            \"title\": region_k,\n            \"url\": `${base_url}/discover?page={{page}}&bztype=${bztype_v}&region=${region_v}&state=all&bzfilter=%2a`,\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.2\n            }\n        };\n        datas.push(data);\n    }\n}\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"media\": \"全部\",\n            \"server\": \"http://api.cloudepays.cn\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}",
    "lastUpdateTime": 1741231864917,
    "loginUi": "[\n      {\n        \"name\":  \"  请杯咖啡，破解限制  \",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"设备管理\",\n        \"type\": \"button\",\n        \"action\": \"clear()\"\n      },{\n        \"name\":  \"更新源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"♥♥♥♥♥♥填写密钥♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"当前来源\",\n        \"type\": \"button\",\n        \"action\": \"getmedia()\"\n      },{\n        \"name\":  \"搜索全部来源漫画\",\n        \"type\": \"button\",\n        \"action\": \"set('搜索全部')\"\n      },{\n        \"name\":  \"搜索番茄漫画\",\n        \"type\": \"button\",\n        \"action\": \"set('番茄')\"\n      },{\n        \"name\":  \"搜索包子漫画\",\n        \"type\": \"button\",\n        \"action\": \"set('包子')\"\n      }  ]",
    "loginUrl": "function login(){}\nvar server = getArgument('server');\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return ''; \n}\n\n// 填写密钥\nfunction loginqt(){\n    let key = gets_key()\n    if (key && key != \"\") {\n            java.toast(\"您已填写秘钥:\"+key);\n            return false\n        }\n    java.startBrowserAwait(getArgument('server')+'/check_key','登录晴天小说书源');\n    key = gets_key()\n    if (key){\n        java.longToast('登录成功，秘钥：'+key);\n        return true\n        } else {\n            java.toast('登录失败！！！！！');\n            return false\n            }\n}\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n //cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\t\t\nfunction api() { \tjava.startBrowserAwait(getArgument('server')+'/','首页');\n    }\nfunction hqmy() { \tjava.startBrowserAwait(getArgument('server')+'/key','密钥');\n    }\nfunction vip() { \tjava.startBrowserAwait(getArgument('server')+'/coffee',\"喝咖啡\");\n    }\nfunction clear() { \tjava.startBrowserAwait(getArgument('server')+'/clear',\"清空设备\");\n    }\n\n\nfunction set(media) {\n\t  setArgument('media',media);\n\t  java.toast(\"\\n\\n已切换至：\"+media+'\\n请重新搜索书籍！');\n}\n\n\nfunction getmedia() {\n\t   \tlet media = getArgument('media');\n\t   \tif(media == '') {\n\t   \t\tmedia = '全部来源都搜索';\n\t   \t\t}\n\t\t\t  java.toast(\"\\n\\n当前搜索范围是：\"+media);\n\t\t\t  \n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：'+ server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    const currentIndex = serverList.indexOf(getArgument('server'));\n    const nextIndex = (currentIndex + 1) % serverList.length;\n    server = serverList[nextIndex];\n    setArgument('server',server);\n    java.toast('\\n\\n'+server + '\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效');\n}\n",
    "respondTime": 185408,
    "ruleBookInfo": {
      "author": "author",
      "intro": "$..book_id\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet jj;\n\nvar tishi = '\\n\\n当前搜索模式：'+ ms +'\\n\\n如需切换,请点击登陆进行切换\\n切换之后需要重新搜索！\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${base_url}/novel_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\nif(!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n</js>",
      "kind": "category",
      "lastChapter": "last_chapter_title",
      "name": "book_name",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.data.data",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}\n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}",
      "lastChapter": "",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "$..book_data[*]",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "checkKeyWord": "炙热沦陷",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}\n{{$.abstract}}",
      "kind": "tags",
      "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\nfunction lastChapterTitle(data) {\n    const media = data.split(\"-\")[0];\n    const bookid = data.split(\"-\")[1].split(\"_\")[0];\n    let url;\n    if (media === \"番茄\") {\n        url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n    } else  {\n        return null\n    }\n}\nlastChapterTitle(result)\n</js>",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "$..chapterListWithVolume[*].*",
      "chapterName": "title",
      "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n// 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\nif(!key) {\n    java.longToast('\\n\\n请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页');\n}\n\nlet catalogue_url = `${base_url}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=-2&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url",
      "updateTime": "firstPassTime"
    },
    "searchUrl": "{{key}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nbase_url+'/searchCaricature?title='+result+'&media='+media",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "搜索过快容易宕机\nhttps://5088b.bi14.cc",
    "bookSourceGroup": "❤️番茄",
    "bookSourceName": "番茄小说123",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.fqxs123.com",
    "bookUrlPattern": "https?://m.fqxs123.com/book/\\d+/",
    "concurrentRate": "5/1000",
    "customOrder": 270,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": false,
    "exploreUrl": "玄幻::/xuanhuan/<,{{page}}.html>\n武侠::/wuxia/<,{{page}}.html>\n都市::/dushi/<,{{page}}.html>\n历史::/lishi/<,{{page}}.html>\n网游::/wangyou/<,{{page}}.html>\n科幻::/kehuan/<,{{page}}.html>\n女生::/mm/<,{{page}}.html>\n全本::/finish/<,{{page}}.html>",
    "header": "{ \"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "jsLib": "番茄小说123 = function () {\n\tconst { source } = this\n\tlet ss = source.getVariable()\n\tlet su = ss == \"\" ? source.getKey() : ss\n\treturn su.split(\"/\")[2]\n}",
    "lastUpdateTime": 1738938130405,
    "loginCheckJs": "java.log(result.url())\n\nif (java.key || /\\/book\\/\\d+\\/$/.test(result.url())) {\n\tss = source.getVariable()\n\tsu = ss == \"\" ? source.getKey() : ss\n\turl = String(result.url()).replace(/\\b\\/.+/, \"\")\n\tif (su != url) {\n\t\tsource.setVariable(url)\n\t\tif (key) {\n\t\tjava.initUrl()\n\t\tresult = java.getStrResponse()\n\t\t}\n\t}\n}\nresult",
    "loginUrl": "https://m.fqxs123.com/login.html",
    "respondTime": 10809,
    "ruleBookInfo": {
      "author": "text.作者@text",
      "coverUrl": "[property$=image]@content",
      "init": "@js:\nif (baseUrl != java.redirectUrl) {\n\t//重定向 重新设置书籍地址\n\tjava.setBaseUrl(java.redirectUrl)\n\t//java.getBook().bookUrl = java.redirectUrl\n\tbook.bookUrl = java.redirectUrl\n}\nresult;",
      "intro": "[property$=description]@content",
      "kind": "[property~=category|status|update_time]@content",
      "lastChapter": "[property$=latest_chapter_name]@content",
      "name": "class.name@text",
      "tocUrl": "/userverify/{{String(baseUrl.match(/book\\/\\d+/))}}/list.html",
      "wordCount": "class.dd_box.1@span.1@text##字数："
    },
    "ruleContent": {
      "content": "#chaptercontent@html",
      "nextContentUrl": "text.下一@href",
      "replaceRegex": "##请收藏.*https.*|.*请关闭畅读或阅读模式.*|请记住本书首发.*|[\\【|「]看书.*|.*领现金红包.*|.*本章由于字数太少.*"
    },
    "ruleExplore": {},
    "ruleSearch": {
      "author": "span@text",
      "bookList": "class.item",
      "bookUrl": "a.1@href@js:`//{\\{番茄小说123()}}${result}`",
      "checkKeyWord": "剑来",
      "coverUrl": "img@src",
      "intro": "dd@text",
      "kind": "0",
      "name": "a.1@text"
    },
    "ruleToc": {
      "chapterList": "dl@dd!0",
      "chapterName": "a@text##请假_.*",
      "chapterUrl": "a@href"
    },
    "searchUrl": "{{source.getVariable()}}/s?q={{key}},{\n  \"webView\": true\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "",
    "bookSourceGroup": "❤️番茄,❤️常用",
    "bookSourceName": "番茄小说🎃",
    "bookSourceType": 0,
    "bookSourceUrl": "http://www.wpzw.cc#🎃",
    "customOrder": 1334,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": false,
    "exploreUrl": "[{\"title\":\"总排行榜\",\"url\":\"/rank/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":0.25}},\n{\"title\":\"月排行榜\",\"url\":\"/rank/monthvisit/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":0.25}},\n{\"title\":\"周排行榜\",\"url\":\"/rank/weekvisit/\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":0.25}},\n{\"title\":\"总收藏榜\",\"url\":\"/rank/goodnum/\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":0.25}}]",
    "lastUpdateTime": 1738938412392,
    "respondTime": 5168,
    "ruleBookInfo": {
      "author": "id.info@p.0@text",
      "coverUrl": "id.fmimg@img@data-original",
      "intro": "id.intro@text",
      "kind": "id.info@p.3@text##状态：",
      "lastChapter": "id.info@class.hidden-xs@tag.a.0@text",
      "name": "id.info@h1@text",
      "tocUrl": "class.readbtn@tag.a.1@href",
      "wordCount": "id.info@p.2@text##字数："
    },
    "ruleContent": {
      "content": "id.content@html",
      "nextContentUrl": "text.下一页@href"
    },
    "ruleExplore": {},
    "ruleSearch": {
      "author": "class.btm@tag.a@text",
      "bookList": "class.item",
      "bookUrl": "dl@dt@tag.a@href",
      "checkKeyWord": "伪戒",
      "coverUrl": "class.image@tag.a@img.lazy@data-original",
      "intro": "dd@text",
      "kind": "class.btm@em.1@text",
      "name": "dl@dt@tag.a@text",
      "wordCount": "class.btm@em.0@text"
    },
    "ruleToc": {
      "chapterList": "dl@dd",
      "chapterName": "text",
      "chapterUrl": "a@href"
    },
    "searchUrl": "{{cookie.removeCookie(source.getKey())}}/search/?searchkey={{key}}",
    "weight": 0
  },
  {
    "bookSourceComment": "感谢关耳大大",
    "bookSourceGroup": "❤️视频,❤️番茄",
    "bookSourceName": "🎉 番茄短剧",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.shanhuzs.com/",
    "customOrder": 2942,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "[{\"title\":\"女频恋爱\",\"url\":\"/fqsansw/5---女频恋爱-----{{page}}---.html\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"反转爽剧\",\"url\":\"/fqsansw/5---反转爽-----{{page}}---.html\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"脑洞悬疑\",\"url\":\"/fqsansw/5---脑洞悬疑-----{{page}}---.html\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"年代穿越\",\"url\":\"/fqsansw/5---年代穿越-----{{page}}---.html\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"古装仙侠\",\"url\":\"/fqsansw/5---古装仙侠-----{{page}}---.html\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"现代都市\",\"url\":\"/fqsansw/5---现代都市-----{{page}}---.html\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}}]",
    "lastUpdateTime": 1738938425449,
    "respondTime": 700,
    "ruleBookInfo": {
      "kind": ".tag@a@text"
    },
    "ruleContent": {
      "content": "##\"url\":\"(.*)\",\"url_next\"##$1###@js:\nif(book.durChapterIndex==chapter.index){\n\t\tjava.startBrowser(result.replace(/\\\\/g,''),title)\n\t\tjava.toast('正在加载视频\\n视频加载较慢，请耐心等待')\n\t}\n'【刷新正文】播放\\n✅直链:\\n'+result",
      "nextContentUrl": "",
      "payAction": "",
      "replaceRegex": "##\\",
      "sourceRegex": "",
      "title": "",
      "webJs": ""
    },
    "ruleExplore": {},
    "ruleSearch": {
      "bookList": "class.col8",
      "bookUrl": "h4@a@href",
      "checkKeyWord": "断亲后",
      "coverUrl": "img@data-original",
      "kind": ".text@text",
      "name": "h4@a@text"
    },
    "ruleToc": {
      "chapterList": "a[href^=\"/fqsanpy/\"]",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "/fqsansc/{{key}}----------{{page}}---.html",
    "weight": 0
  }
]